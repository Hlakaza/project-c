{"version":3,"sources":["./src/$_gendir lazy","./src/app/admin/admin.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.routes.ts","./src/app/admin/adminForms.model.ts","./src/app/admin/adminPage/adminPage.component.css","./src/app/admin/adminPage/adminPage.component.html","./src/app/admin/adminPage/adminPage.component.ts","./src/app/admin/editUsersForms/editUsersForms.component.css","./src/app/admin/editUsersForms/editUsersForms.component.html","./src/app/admin/editUsersForms/editUsersForms.component.ts","./src/app/admin/services/admin.service.ts","./src/app/admin/services/adminGuard.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth.service.ts","./src/app/auth/authguard.service.ts","./src/app/auth/password.model.ts","./src/app/auth/user.model.ts","./src/app/components/loader/loader.component.css","./src/app/components/loader/loader.component.html","./src/app/components/loader/loader.component.ts","./src/app/components/modal/modal.component.css","./src/app/components/modal/modal.component.html","./src/app/components/modal/modal.component.ts","./src/app/components/sidebar/sidebar.component.css","./src/app/components/sidebar/sidebar.component.html","./src/app/components/sidebar/sidebar.component.ts","./src/app/components/tabs/tab.component.ts","./src/app/components/tabs/tabs.component.css","./src/app/components/tabs/tabs.component.html","./src/app/components/tabs/tabs.component.ts","./src/app/components/user-dashboard/user-dashboard.component.css","./src/app/components/user-dashboard/user-dashboard.component.html","./src/app/components/user-dashboard/user-dashboard.component.ts","./src/app/config/config.ts","./src/app/config/toastr.config.ts","./src/app/errorHandler/error.component.html","./src/app/errorHandler/error.component.ts","./src/app/errorHandler/error.service.ts","./src/app/errorHandler/error.ts","./src/app/errorPage/errorPage.component.html","./src/app/errorPage/errorPage.component.ts","./src/app/form/form.component.html","./src/app/form/form.component.scss","./src/app/form/form.component.ts","./src/app/form/form.model.ts","./src/app/form/form.service.ts","./src/app/index.ts","./src/app/mainPage/mainPage.component.css","./src/app/mainPage/mainPage.component.html","./src/app/mainPage/mainPage.component.ts","./src/app/navbar/navbar.component.css","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/routes.component.ts","./src/app/user/accountRecover/forgetPassword.component.html","./src/app/user/accountRecover/forgetPassword.component.ts","./src/app/user/accountRecover/resetPagesStyle.scss","./src/app/user/accountRecover/resetPassword.component.html","./src/app/user/accountRecover/resetPassword.component.ts","./src/app/user/login/login.component.html","./src/app/user/login/login.component.scss","./src/app/user/login/login.component.ts","./src/app/user/profile/changePassword/changePassword.component.html","./src/app/user/profile/changePassword/changePassword.component.ts","./src/app/user/profile/profile.service.ts","./src/app/user/profile/userProfile.component.css","./src/app/user/profile/userProfile.component.html","./src/app/user/profile/userProfile.component.ts","./src/app/user/profile/userProfile.model.ts","./src/app/user/register/register.component.css","./src/app/user/register/register.component.html","./src/app/user/register/register.component.ts","./src/app/user/user.component.html","./src/app/user/user.component.ts","./src/app/user/user.routes.ts","./src/app/userForms/editForm/editUserForm.component.css","./src/app/userForms/editForm/editUserForm.component.html","./src/app/userForms/editForm/editUserForm.component.ts","./src/app/userForms/formsTable/userForms.component.css","./src/app/userForms/formsTable/userForms.component.html","./src/app/userForms/formsTable/userForms.component.ts","./src/app/validators/input-match.ts","./src/environments/environment.ts","./src/main.ts","./src/polyfills.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir lazy\n// module id = ./src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<section id=\\\"sidebar\\\">\\r\\n    <div class=\\\"white-label\\\">\\r\\n        <img src=\\\"http://clinixmyvoice.co.za/system/uploads/Clinix%20Health%20Academy/images/logo_white.png\\\" alt=\\\"Clinix\\\">\\r\\n    </div>\\r\\n    <div id=\\\"sidebar-nav\\\">\\r\\n        <ul>\\r\\n            <li class=\\\"active\\\"><a class=\\\"marg-6 btn btn-deep-orange \\\" routerLink=\\\"/admin\\\">All Vendors</a></li>\\r\\n            <!-- <li><a class=\\\"marg-6 spacing-top btn btn-blue-grey\\\" routerLink=\\\"/user/forms\\\"> Profile</a></li> -->\\r\\n        </ul>\\r\\n    </div>\\r\\n</section>\\r\\n<section id=\\\"content\\\">\\r\\n    <div id=\\\"header\\\">\\r\\n        <div class=\\\"header-nav\\\">\\r\\n            <div class=\\\"menu-button\\\">\\r\\n                <!--<i class=\\\"fa fa-navicon\\\"></i>-->\\r\\n            </div>\\r\\n            <div class=\\\"widget-nav\\\">\\r\\n                <ul>\\r\\n                    <li class=\\\"widget-nav-item nav-chat\\\">\\r\\n                        <div (click)=\\\"logout()\\\" class=\\\"cursor-pointer font-icon\\\"><i class=\\\"fa fa-sign-out-alt\\\"></i> Logout</div>\\r\\n                    </li>\\r\\n                    <li class=\\\"widget-nav-item nav-profile\\\">\\r\\n                        <div class=\\\"nav-profile-image\\\">\\r\\n                            <img src=\\\"../../assets/images/User_Avatar.png\\\" alt=\\\"profile image\\\">\\r\\n                            <div class=\\\"nav-profile-name\\\">Admin <i class=\\\"fa fa-caret-down\\\"></i></div>\\r\\n                        </div>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"content\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/admin.component.html\n// module id = ./src/app/admin/admin.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html'\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  logout() {\r\n    return this.authService.logout();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/admin.component.ts","import {Routes} from '@angular/router';\r\nimport {AdminGuardService} from './services/adminGuard';\r\nimport {EditUsersFormsComponent} from './editUsersForms/editUsersForms.component';\r\nimport {AdminPageComponent} from './adminPage/adminPage.component';\r\n\r\nexport const ADMIN_ROUTES: Routes = [\r\n  {path: '', component: AdminPageComponent, canActivate: [AdminGuardService]},\r\n  {path: 'view/:id', component: EditUsersFormsComponent, canActivate: [AdminGuardService]}\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/admin.routes.ts","export class Form {\r\n\r\n    constructor(// public textInputOne: string,\r\n  //             public textInputTwo: string,\r\n              public tradingName: string,\r\n              public registeredCompanyName: string,\r\n              public registrationNumber: string,\r\n              public physicalAddress: string,\r\n              public postalAddress: string,\r\n              public tel: string,\r\n              public faxNo: string,\r\n              public website: string,\r\n              public vatNumber: string,\r\n              public accPersonName: string,\r\n              public accPersonNo: string,\r\n              public accPersonFaxNo: string,\r\n              public accPersonEmail: string,\r\n              public salesPersonName: string,\r\n              public salesPersonNo: string,\r\n              public salesPersonEmail: string,\r\n              public salesPersonFaxNo: string,\r\n              public fileUp?: string,\r\n              public userId?: string,\r\n              public formId?: string) {\r\n\r\n    this.tradingName = tradingName;\r\n    this.registeredCompanyName = registeredCompanyName;\r\n    this.registrationNumber = registrationNumber;\r\n    this.physicalAddress = physicalAddress;\r\n    this.postalAddress = postalAddress;\r\n    this.tel = tel;\r\n    this.faxNo = faxNo;\r\n    this.website = website;\r\n    this.vatNumber = vatNumber;\r\n    this.accPersonName = accPersonName;\r\n    this.accPersonNo = accPersonNo;\r\n    this.accPersonFaxNo = accPersonFaxNo;\r\n    this.accPersonEmail = accPersonEmail;\r\n    this.salesPersonName = salesPersonName;\r\n    this.salesPersonNo = salesPersonNo;\r\n    this.salesPersonEmail = salesPersonEmail;\r\n    this.salesPersonFaxNo = salesPersonFaxNo;\r\n    this.fileUp       = fileUp;\r\n    this.userId       = userId;\r\n    this.formId       = formId;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/adminForms.model.ts","module.exports = \".topPad {\\r\\n  padding-top: 100px !important;\\r\\n}\\r\\n\\r\\n.topMargin {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.img-resized {\\r\\n  width: 10%;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/adminPage/adminPage.component.css\n// module id = ./src/app/admin/adminPage/adminPage.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pad-top-header\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <!--Table-->\\r\\n            <table class=\\\"table table-hover table-responsive-md table-fixed\\\">\\r\\n\\r\\n                <!--Table head-->\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <!-- <th>#</th> -->\\r\\n                        <th>Company Name</th>\\r\\n                        <th>Work Telephone</th>\\r\\n                        <th>Contact Pesron</th>\\r\\n                        <th>Website</th>\\r\\n                        <th>Date Registered</th>\\r\\n                        <th>&nbsp;&nbsp;</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <!--Table head-->\\r\\n\\r\\n                <!--Table body-->\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let form of fetchedForms\\\">\\r\\n                        <!-- <th scope=\\\"row\\\">1</th> -->\\r\\n                        <td>{{form.tradingName}}</td>\\r\\n                        <td>{{form.tel}}</td>\\r\\n                        <td>{{form.accPersonName}}</td>\\r\\n                        <td>{{form.website}}</td>\\r\\n                        <td>{{form.dateSubmitted | date: 'medium'}}</td>\\r\\n                        <td> <button class=\\\"btn btn-tiny btn-default\\\" [routerLink]=\\\"['view', form._id]\\\"><i class=\\\"fa fa-eye\\\"></i></button></td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n                <!--Table body-->\\r\\n\\r\\n            </table>\\r\\n            <!--Table-->\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/adminPage/adminPage.component.html\n// module id = ./src/app/admin/adminPage/adminPage.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {AdminService} from '../services/admin.service';\r\n\r\n@Component({\r\n  selector   : 'app-admin',\r\n  templateUrl: './adminPage.component.html',\r\n  styleUrls  : ['./adminPage.component.css']\r\n})\r\nexport class AdminPageComponent implements OnInit {\r\n\r\n  fetchedForms = [];\r\n\r\n  constructor(private adminService: AdminService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.adminService.getUserForms()\r\n      .subscribe(\r\n        forms => this.fetchedForms = forms,\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  onDelete(formId) {\r\n    this.adminService.deleteForm(formId)\r\n      .subscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/adminPage/adminPage.component.ts","module.exports = \".topPad {\\r\\n  padding-top: 100px !important;\\r\\n}\\r\\n\\r\\n.topMargin {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.img-resized {\\r\\n  width: 10%;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/editUsersForms/editUsersForms.component.css\n// module id = ./src/app/admin/editUsersForms/editUsersForms.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n    <!-- <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"submitEditedForm()\\\" *ngFor=\\\"let form of fetchedForm\\\" class=\\\"form-horizontal register-form\\\" novalidate>\\r\\n        <fieldset>\\r\\n            <legend class=\\\"text-center topPad\\\">Edit Form with id: {{form._id}}</legend>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"col-md-4 control-label\\\" for=\\\"textInputOne\\\">Text Input One:</label>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input id=\\\"textInputOne\\\" #textOne formControlName=\\\"textInputOne\\\" name=\\\"textInputOne\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.textInputOne\\\" class=\\\"form-control input-md\\\">\\r\\n                    <div [hidden]=\\\"textInputOne.valid || textInputOne.pristine\\\" class=\\\"alert alert-danger\\\">Please enter some text</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"col-md-4 control-label\\\" for=\\\"textInputTwo\\\">Text Input Two:</label>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input id=\\\"textInputTwo\\\" formControlName=\\\"textInputTwo\\\" name=\\\"textInputTwo\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.textInputTwo\\\" class=\\\"form-control input-md\\\">\\r\\n                    <div [hidden]=\\\"textInputTwo.valid || textInputTwo.pristine\\\" class=\\\"alert alert-danger\\\">Please enter some text</div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            image\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-md-4 col-centered\\\">\\r\\n                    <div class=\\\"profilePictureTempEdit\\\">\\r\\n                        <button *ngIf=\\\"submitStarted\\\" class=\\\"disabled btn-no-hover btn btn-default centered progress-button\\\">\\r\\n              <i class=\\\"fa fa-circle-o-notch fa-spin fa-fw\\\"></i> Please wait... <span class=\\\"progress-percent\\\">{{progress}}%</span>\\r\\n            </button>\\r\\n                        <div class=\\\"text-center top-margin\\\">\\r\\n                            <div class=\\\"profilePictureTempEdit\\\" *ngIf=\\\"oldImage\\\">\\r\\n                                <img class=\\\"img-responsive\\\" src=\\\"./uploads/forms/{{form.owner}}/{{form.imagePath}}\\\" alt=\\\"image\\\" onerror=\\\"this.src ='assets/images/no-image.jpg';\\\">\\r\\n                                <div class=\\\"upload-button\\\" *ngIf=\\\"!imageReady\\\">\\r\\n                                    <input type=\\\"file\\\" name=\\\"file-1\\\" id=\\\"file-1\\\" class=\\\"inputfile4 inputfile-4\\\" (change)=\\\"onFileSelect($event)\\\">\\r\\n                                    <label for=\\\"file-1\\\">\\r\\n                <span>\\r\\n                </span>\\r\\n                  </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"profilePictureTempEdit\\\">\\r\\n                                <img *ngIf=\\\"imageReady\\\" #image class=\\\"img-responsive\\\" src=\\\"{{imageUrl}}{{imagePath}}\\\" alt=\\\"image\\\" onerror=\\\"this.src ='assets/images/no-image.jpg';\\\" />\\r\\n                                <div class=\\\"upload-button\\\">\\r\\n                                    <input type=\\\"file\\\" name=\\\"file-2\\\" id=\\\"file-2\\\" class=\\\"inputfile4 inputfile-4\\\" (change)=\\\"onFileSelect($event)\\\">\\r\\n                                    <label for=\\\"file-2\\\">\\r\\n                  <span>\\r\\n                  </span>\\r\\n                  </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div> -->\\r\\n\\r\\n    <!-- Submit Button -->\\r\\n    <!-- <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-md-4 col-centered\\\">\\r\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!myForm.valid && myForm.untouched\\\" id=\\\"submitForm\\\" name=\\\"sumbitForm\\\" class=\\\"btn btn-primary text-center bottomMargin\\\">Submit</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </fieldset>\\r\\n    </form> -->\\r\\n\\r\\n\\r\\n    <!--////////////////////////////////////////////////-->\\r\\n    <div class=\\\"pad-top-header\\\">\\r\\n        <div class=\\\"main-content\\\">\\r\\n            <div class=\\\"container-fluid\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <!-- <h4 class=\\\"title\\\">Welcome Admin\\r\\n                    </h4>\\r\\n                    <p class=\\\"category\\\">List of Registered Users And Their Details</p> -->\\r\\n                    <div class=\\\"card spacing-bottom\\\" *ngFor=\\\"let form of fetchedForm\\\">\\r\\n                        <div class=\\\"card-header\\\" data-background-color=\\\"red\\\">\\r\\n                            <h4 class=\\\"title\\\">Vendor: {{form.tradingName}}\\r\\n                            </h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-content table-responsive table-full-width\\\">\\r\\n                            <table class=\\\"table\\\">\\r\\n                                <thead class=\\\"text-danger\\\">\\r\\n                                    <th>Company Information</th>\\r\\n                                    <th>Correspondecne</th>\\r\\n                                    <th>Documents</th>\\r\\n                                    <th>Received</th>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr>\\r\\n                                        <td>Trading Name: {{form.tradingName}}</td>\\r\\n                                        <td>Acc PersonName: {{form.accPersonName}}</td>\\r\\n                                        <td>Doc: Customer General Terms and Conditions of Supply</td>\\r\\n                                        <td width=\\\"30\\\">\\r\\n                                            <!-- Filled-in checkbox -->\\r\\n                                            <div class=\\\"form-group mr-3\\\">\\r\\n                                                <input type=\\\"checkbox\\\" checked id=\\\"inlineFormCheckbox1\\\">\\r\\n                                                <label for=\\\"inlineFormCheckbox1\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>Registered Name: {{form.tradingName}}</td>\\r\\n                                        <td>Acc Person No: {{form.accPersonNo}}</td>\\r\\n                                        <td>Doc: BEE Certificate</td>\\r\\n\\r\\n                                        <td width=\\\"30\\\">\\r\\n                                            <!-- Filled-in checkbox -->\\r\\n                                            <div class=\\\"form-group mr-3\\\">\\r\\n                                                <input type=\\\"checkbox\\\" checked id=\\\"inlineFormCheckbox2\\\">\\r\\n                                                <label for=\\\"inlineFormCheckbox2\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>Physical Address: {{form.physicalAddress}}</td>\\r\\n                                        <td>Acc Person Fax No: {{form.accPersonFaxNo}}</td>\\r\\n                                        <td>Doc: Letter of Good Standing</td>\\r\\n                                        <td width=\\\"30\\\">\\r\\n                                            <!-- Filled-in checkbox -->\\r\\n                                            <div class=\\\"form-group mr-3\\\">\\r\\n                                                <input type=\\\"checkbox\\\" checked id=\\\"inlineFormCheckbox3\\\">\\r\\n                                                <label for=\\\"inlineFormCheckbox3\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>Postal Address: {{form.postalAddress}}</td>\\r\\n                                        <td>Acc Person Email: {{form.accPersonEmail}}</td>\\r\\n                                        <td>Doc: Audited latest Financial Statements</td>\\r\\n                                        <td width=\\\"30\\\">\\r\\n                                            <!-- Filled-in checkbox -->\\r\\n                                            <div class=\\\"form-group mr-3\\\">\\r\\n                                                <input type=\\\"checkbox\\\" checked id=\\\"inlineFormCheckbox4\\\">\\r\\n                                                <label for=\\\"inlineFormCheckbox4\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>Tel: {{form.tel}}</td>\\r\\n                                        <td>Sales Person Name: {{form.salesPersonName}}</td>\\r\\n                                        <td>Doc: Proof of Banking Details</td>\\r\\n                                        <td width=\\\"30\\\">\\r\\n                                            <!-- Filled-in checkbox -->\\r\\n                                            <div class=\\\"form-group mr-3\\\">\\r\\n                                                <input type=\\\"checkbox\\\" checked id=\\\"inlineFormCheckbox5\\\">\\r\\n                                                <label for=\\\"inlineFormCheckbox5\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>Fax: {{form.faxNo}}</td>\\r\\n                                        <td>Sales Person No: {{form.salesPersonNo}}</td>\\r\\n                                        <td>Doc: Company Letterhead</td>\\r\\n                                        <td width=\\\"30\\\">\\r\\n                                            <!-- Filled-in checkbox -->\\r\\n                                            <div class=\\\"form-group mr-3\\\">\\r\\n                                                <input type=\\\"checkbox\\\" checked id=\\\"inlineFormCheckbox6\\\">\\r\\n                                                <label for=\\\"inlineFormCheckbox6\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>Website: {{form.website}}</td>\\r\\n                                        <td>Sales Person FaxNo: {{form.salesPersonFaxNo}}</td>\\r\\n                                        <td>Doc: Tax Certificate</td>\\r\\n                                        <td width=\\\"30\\\">\\r\\n                                            <!-- Filled-in checkbox -->\\r\\n                                            <div class=\\\"form-group mr-3\\\">\\r\\n                                                <input type=\\\"checkbox\\\" checked id=\\\"inlineFormCheckbox7\\\">\\r\\n                                                <label for=\\\"inlineFormCheckbox7\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>Vat Number: {{form.vatNumber}}</td>\\r\\n                                        <td>Sales Person Email: {{form.salesPersonEmail}}</td>\\r\\n                                        <td>Doc: MCC Certificate</td>\\r\\n                                        <td width=\\\"30\\\">\\r\\n                                            <!-- Filled-in checkbox -->\\r\\n                                            <div class=\\\"form-group mr-3\\\">\\r\\n                                                <input type=\\\"checkbox\\\" checked id=\\\"inlineFormCheckbox8\\\">\\r\\n                                                <label for=\\\"inlineFormCheckbox8\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>&nbsp;&nbsp;&nbsp;</td>\\r\\n                                        <td>&nbsp;&nbsp;&nbsp;</td>\\r\\n                                        <td>Doc: Declaration of possible conflict of Interest with Clinix Health Group (CHG)</td>\\r\\n                                        <td width=\\\"30\\\">\\r\\n                                            <!-- Filled-in checkbox -->\\r\\n                                            <div class=\\\"form-group mr-3\\\">\\r\\n                                                <input type=\\\"checkbox\\\" checked id=\\\"inlineFormCheckbox88\\\">\\r\\n                                                <label for=\\\"inlineFormCheckbox88\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>&nbsp;&nbsp;&nbsp;</td>\\r\\n                                        <td>&nbsp;&nbsp;&nbsp;</td>\\r\\n                                        <td>Doc: identity Documents</td>\\r\\n                                        <td width=\\\"30\\\">\\r\\n                                            <!-- Filled-in checkbox -->\\r\\n                                            <div class=\\\"form-group mr-3\\\">\\r\\n                                                <input type=\\\"checkbox\\\" checked id=\\\"inlineFormCheckbox9\\\">\\r\\n                                                <label for=\\\"inlineFormCheckbox9\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>&nbsp;&nbsp;&nbsp;</td>\\r\\n                                        <td>&nbsp;&nbsp;&nbsp;</td>\\r\\n                                        <td>Doc: Product price lists </td>\\r\\n                                        <td width=\\\"30\\\">\\r\\n                                            <!-- Filled-in checkbox -->\\r\\n                                            <div class=\\\"form-group mr-3\\\">\\r\\n                                                <input type=\\\"checkbox\\\" checked id=\\\"inlineFormCheckbox99\\\">\\r\\n                                                <label for=\\\"inlineFormCheckbox99\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <button class=\\\"btn btn-primary\\\" disabled [routerLink]=\\\"['view', form._id]\\\"><i class=\\\"fa fa-check\\\"></i>Aprove</button>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <button class=\\\"btn btn-danger\\\" disabled (click)=\\\"onDelete(form._id)\\\"><i class=\\\"fa fa-trash\\\"></i>Disaprove</button>\\r\\n                                        </td>\\r\\n                                        <td>&nbsp;&nbsp;&nbsp;</td>\\r\\n                                        <td>&nbsp;&nbsp;&nbsp;</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/editUsersForms/editUsersForms.component.html\n// module id = ./src/app/admin/editUsersForms/editUsersForms.component.html\n// module chunks = main","import {AfterViewInit, Component, ElementRef, EventEmitter, OnInit, Renderer, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AdminService} from '../services/admin.service';\r\nimport {BASE_URL, FORMS_API_URL} from '../../config/config';\r\nimport {Form} from '../adminForms.model';\r\nimport { vatNumberMatch, regNumberMatch } from '../../validators/input-match';\r\n@Component({\r\n  selector   : 'app-edit-users-forms',\r\n  templateUrl: './editUsersForms.component.html',\r\n  styleUrls  : ['./editUsersForms.component.css']\r\n})\r\nexport class EditUsersFormsComponent implements OnInit, AfterViewInit {\r\n\r\n  onClear: EventEmitter<any> = new EventEmitter();\r\n\r\n  fetchedForm: any[] = [];\r\n  myForm: FormGroup;\r\n  tradingName: FormControl;\r\n  registeredCompanyName: FormControl;\r\n  registrationNumber: FormControl;\r\n  physicalAddress: FormControl;\r\n  postalAddress: FormControl;\r\n  tel: FormControl;\r\n  faxNo: FormControl;\r\n  website: FormControl;\r\n  vatNumber: FormControl;\r\n  accPersonName: FormControl;\r\n  accPersonNo: FormControl;\r\n  accPersonFaxNo: FormControl;\r\n  accPersonEmail: FormControl;\r\n  accPersaccPersonEmailnFaxNo: FormControl;\r\n  salesPersonName: FormControl;\r\n  salesPersonNo: FormControl;\r\n  salesPersonEmail: FormControl;\r\n  salesPersonFaxNo: FormControl;\r\n\r\n  token: string = localStorage.getItem('id_token');\r\n  url = `${FORMS_API_URL}/image`;\r\n  imageUrl = `${BASE_URL}/uploads/tmp/`;\r\n  maxSize = 5000000;\r\n  invalidFileSizeMessage = '{0}: Invalid file size, ';\r\n  invalidFileSizeMessageDetail = 'Maximum upload size is {0}.';\r\n  public files: File[];\r\n  public progress  = 0;\r\n  public submitStarted: boolean;\r\n  formId: string;\r\n  imagePath: string;\r\n  imageReady                           = false;\r\n  oldImage                             = true;\r\n  // @ViewChild('textOne') textOne: ElementRef;\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n\r\n  constructor(private adminService: AdminService,\r\n              private toastr: ToastsManager,\r\n              private fb: FormBuilder,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private renderer: Renderer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.formId = this.route.snapshot.params['id'];\r\n    this.adminService.getSingleForm(this.formId)\r\n      .subscribe(\r\n        (data => {\r\n          const formArray = [];\r\n          // tslint:disable-next-line:forin\r\n          for (let key in data) {\r\n            formArray.push(data[key]);\r\n          }\r\n          this.fetchedForm = formArray;\r\n        })\r\n      );\r\n    this.myForm = this.fb.group({\r\n      tradingName: new FormControl(null, Validators.required),\r\n      registeredCompanyName: new FormControl(null, Validators.required),\r\n      registrationNumber: new FormControl(null, Validators.required),\r\n      confirmRegNumber: new FormControl({ value: null, disabled: false }, [Validators.required, regNumberMatch]),\r\n      physicalAddress: new FormControl(null, Validators.required),\r\n      postalAddress: new FormControl(null, Validators.required),\r\n      tel: new FormControl(null, Validators.required),\r\n      faxNo: new FormControl(null, Validators.required),\r\n      vatNumber: new FormControl(null, Validators.required),\r\n      website: new FormControl(null, Validators.required),\r\n      confirmVatNumber: new FormControl({ value: null, disabled: false }, [Validators.required, vatNumberMatch]),\r\n      accPersonName: new FormControl(null, Validators.required),\r\n      accPersonNo: new FormControl(null, Validators.required),\r\n      accPersonFaxNo: new FormControl(null, Validators.required),\r\n      accPersonEmail: new FormControl(null, Validators.required),\r\n      salesPersonName: new FormControl(null, Validators.required),\r\n      salesPersonNo: new FormControl(null, Validators.required),\r\n      salesPersonEmail: new FormControl(null, Validators.required),\r\n      salesPersonFaxNo: new FormControl(null, Validators.required),\r\n    });\r\n  }\r\n\r\n  // focus on first input box after the view is initialized\r\n  ngAfterViewInit() {\r\n    // setTimeout(() => {\r\n    //   this.renderer.invokeElementMethod(this.textOne.nativeElement, 'focus', []);\r\n    // }, 50);\r\n  }\r\n\r\n  // cancel and return to the user's forms page\r\n  cancel() {\r\n    this.router.navigate(['user/forms']);\r\n  }\r\n\r\n  // event fired when the user selects an image\r\n  onFileSelect(event) {\r\n    this.submitStarted = true;\r\n    this.clear();\r\n    let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\r\n    for (let i = 0; i < files.length; i++) {\r\n      let file = files[i];\r\n      if (this.validate(file)) {\r\n        if (this.isFile(file)) {\r\n          this.files.push(files[i]);\r\n          let xhr      = new XMLHttpRequest();\r\n          let formData = new FormData();\r\n          // tslint:disable-next-line:no-shadowed-variable\r\n          for (let i = 0; i < this.files.length; i++) {\r\n            formData.append('fileUp', this.files[i], this.files[i].name);\r\n          }\r\n\r\n          xhr.onreadystatechange = () => {\r\n            if (xhr.readyState === 4) {\r\n              this.progress = 0;\r\n              if (xhr.status === 201) {\r\n                this.imagePath     = xhr.response.replace(/^\"|\"$/g, '');\r\n                this.imageReady    = true;\r\n                this.oldImage      = false;\r\n                this.submitStarted = false;\r\n              } else if (xhr.status !== 201) {\r\n                this.toastr.error('There was an error, please try again later');\r\n                this.submitStarted = false;\r\n                this.oldImage      = true;\r\n                this.clear();\r\n              }\r\n              this.clear();\r\n            }\r\n          };\r\n          xhr.upload.addEventListener('progress', (e: ProgressEvent) => {\r\n            if (e.lengthComputable) {\r\n              this.progress = Math.round((e.loaded * 100) / e.total);\r\n            }\r\n          }, false);\r\n\r\n          xhr.open('POST', this.url, true);\r\n          xhr.setRequestHeader('Authorization', 'JWT ' + this.token);\r\n          xhr.send(formData);\r\n        }\r\n      } else if (!this.isFile(file)) {\r\n        this.toastr.error('Only pdf, doc, jpep and png are allowed');\r\n      }\r\n    }\r\n  }\r\n\r\n  // clears the form\r\n  clear() {\r\n    this.files = [];\r\n    this.onClear.emit();\r\n  }\r\n\r\n  // check if the file is actually an image, pdf or doc by checking the mime type\r\n  isFile(file: File): boolean {\r\n    if (!file.type.match(/.jpeg|.jpg|.png|.doc|.docx|.gif/)) {\r\n      this.toastr.error('Only pdf, doc, jpep and png are allowed');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // check if the form has files ready to be uploaded\r\n  hasFiles(): boolean {\r\n    if (typeof this.files !== 'number') {\r\n      return this.files && this.files.length > 0;\r\n    }\r\n  }\r\n\r\n  // remove the image from the preview\r\n  remove(index: number) {\r\n    this.files.splice(index, 1);\r\n    this.fileInput.nativeElement.value = '';\r\n  }\r\n\r\n  // check the image file size\r\n  validate(file: File): boolean {\r\n    if (this.maxSize && file.size > this.maxSize) {\r\n      this.toastr.error(this.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.maxSize)),\r\n        this.invalidFileSizeMessage.replace('{0}', file.name));\r\n      this.submitStarted = false;\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n// format the size to display it in toastr in case the user uploaded a file bigger than 5MB\r\n  formatSize(bytes) {\r\n    if (bytes === 0) {\r\n      return '0 B';\r\n    }\r\n    let k     = 1000,\r\n        dm    = 3,\r\n        sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n        i     = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n  // submit the form to back end\r\n\r\n  submitEditedForm() {\r\n    this.submitStarted = true;\r\n    const editForm     = new Form(\r\n      // this.myForm.value.textInputOne,\r\n      // this.myForm.value.textInputTwo,\r\n      this.myForm.value.tradingName,\r\n      this.myForm.value.registeredCompanyName,\r\n      this.myForm.value.registrationNumber,\r\n      this.myForm.value.physicalAddress,\r\n      this.myForm.value.postalAddress,\r\n      this.myForm.value.tel,\r\n      this.myForm.value.faxNo,\r\n      this.myForm.value.website,\r\n      this.myForm.value.vatNumber,\r\n      this.myForm.value.accPersonName,\r\n      this.myForm.value.accPersonNo,\r\n      this.myForm.value.accPersonFaxNo,\r\n      this.myForm.value.accPersonEmail,\r\n      this.myForm.value.salesPersonName,\r\n      this.myForm.value.salesPersonNo,\r\n      this.myForm.value.salesPersonFaxNo,\r\n      this.myForm.value.salesPersonEmail,\r\n      this.imagePath\r\n    );\r\n    this.adminService.editForm(editForm, this.formId)\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigateByUrl('/admin');\r\n          this.toastr.success('Form edited successfully');\r\n        }, error => {\r\n          this.submitStarted = false;\r\n          this.toastr.error('There was an error, please try again later');\r\n        }\r\n      );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/editUsersForms/editUsersForms.component.ts","import {Injectable} from '@angular/core';\r\nimport {Headers, Response} from '@angular/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ErrorService} from '../../errorHandler/error.service';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport {Form} from '../adminForms.model';\r\nimport {AuthHttp, JwtHelper} from 'angular2-jwt';\r\nimport {AuthService} from '../../auth/auth.service';\r\nimport {ADMIN_API_URL} from '../../config/config';\r\n\r\n@Injectable()\r\nexport class AdminService {\r\n  private token: string        = localStorage.getItem('id_token');\r\n  private forms                = [];\r\n  private singleForm           = Object;\r\n  jwtHelper: JwtHelper = new JwtHelper();\r\n\r\n  constructor(private authHttp: AuthHttp,\r\n              private errorService: ErrorService,\r\n              private toastr: ToastsManager,\r\n              private authService: AuthService) {\r\n  }\r\n\r\n  getUserForms() {\r\n    if (this.authService.isLoggedIn()) {\r\n      let token   = localStorage.getItem('id_token');\r\n      let headers = new Headers({'Content-Type': 'application/json'});\r\n      headers.append('Authorization', token);\r\n      return this.authHttp.get(`${ADMIN_API_URL}/forms`, {headers: headers})\r\n        .map((response: Response) => {\r\n          const forms      = response.json().forms;\r\n          let fetchedForms = [];\r\n          for (let form of forms) {\r\n            fetchedForms.push(form);\r\n          }\r\n          this.forms = fetchedForms;\r\n          return fetchedForms;\r\n        })\r\n        .catch((error: Response) => {\r\n          this.errorService.handleError(error.json());\r\n          return Observable.throw(error.json());\r\n        });\r\n    }\r\n  }\r\n\r\n  editForm(editForm, formId) {\r\n    const body    = JSON.stringify(editForm);\r\n    const headers = new Headers({'Content-Type': 'application/json'});\r\n    headers.append('Authorization', this.token);\r\n    return this.authHttp.patch(`${ADMIN_API_URL}/form/` + formId, body, {headers: headers})\r\n      .map((response: Response) => response.json())\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n\r\n  deleteForm(form: Form) {\r\n    this.forms.splice(this.forms.indexOf(form),  1);\r\n    let headers = new Headers({'Content-Type': 'application/json'});\r\n    headers.append('Authorization', this.token);\r\n    return this.authHttp.delete(`${ADMIN_API_URL}/form/` + form, {headers: headers})\r\n      .map((response: Response) => {\r\n        this.toastr.success('Form deleted successfully!');\r\n        response.json();\r\n      })\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n\r\n  getSingleForm(formId) {\r\n    let headers = new Headers({'Content-Type': 'application/json'});\r\n    headers.append('Authorization', this.token);\r\n    return this.authHttp.get(`${ADMIN_API_URL}/form/` + formId, {headers: headers})\r\n      .map((response: Response) => {\r\n        this.singleForm = response.json();\r\n        return this.singleForm;\r\n      })\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n\r\n  // check if user is an Administrator by decoding the token from localStorage\r\n  isAdmin() {\r\n    let userInfo = localStorage.getItem('id_token') ? this.jwtHelper.decodeToken(localStorage.getItem('id_token')) : null;\r\n    if (userInfo) {\r\n      if (userInfo.role[0] === 'admin') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/services/admin.service.ts","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport {AdminService} from './admin.service';\r\n\r\n@Injectable()\r\nexport class AdminGuardService implements CanActivate {\r\n\r\n  constructor(private router: Router, private toastr: ToastsManager, private adminService: AdminService) {\r\n  }\r\n\r\n  // we check if the user is an Administrator or not\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\r\n    if (this.adminService.isAdmin()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/services/adminGuard.ts","module.exports = \"<header *ngIf=\\\"!isLoggedIn() || isAdmin()\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n    <app-error></app-error>\\r\\n</header>\\r\\n<section class=\\\"dash-wraper\\\" *ngIf=\\\"isLoggedIn() && !isAdmin()\\\">\\r\\n    <section id=\\\"sidebar\\\" class=\\\"sidebar\\\">\\r\\n        <app-sidebar></app-sidebar>\\r\\n    </section>\\r\\n    <section id=\\\"content\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n            <div class=\\\"pad-top-header\\\">\\r\\n                <div class=\\\"main-content marg-auto\\\">\\r\\n                    <div class=\\\"container-fluid\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-8\\\">\\r\\n                                <!-- Content -->\\r\\n                                <router-outlet></router-outlet>\\r\\n                                <app-error></app-error>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <!-- User profile -->\\r\\n                                <app-userprofile></app-userprofile>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </section>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import {Component, ViewContainerRef} from '@angular/core';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AdminService } from './admin/services/admin.service';\r\n\r\n@Component({\r\n  selector   : 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private adminService: AdminService,\r\n    public toastr: ToastsManager,\r\n    public vRef: ViewContainerRef) {\r\n    this.toastr.setRootViewContainerRef(vRef);\r\n  }\r\n    // check if user is logged in by asking our authentication service, we use this function in html file *ngIf directive\r\n    isLoggedIn() {\r\n      return this.authService.isLoggedIn();\r\n    }\r\n    isAdmin() {\r\n      return this.adminService.isAdmin();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {Http, HttpModule} from '@angular/http';\r\nimport {AppComponent} from './app.component';\r\nimport {NavbarComponent} from './navbar/navbar.component';\r\nimport {FormComponent} from './form/form.component';\r\nimport {RegisterComponent} from './user/register/register.component';\r\nimport {UserComponent} from './user/user.component';\r\nimport {RouterModule} from '@angular/router';\r\nimport {routing} from './routes.component';\r\nimport {CommonModule, HashLocationStrategy, LocationStrategy} from '@angular/common';\r\nimport {AuthGuardService} from './auth/authguard.service';\r\nimport {AuthService} from './auth/auth.service';\r\nimport {ErrorService} from './errorHandler/error.service';\r\nimport {ToastModule, ToastOptions} from 'ng2-toastr';\r\nimport {LoginComponent} from './user/login/login.component';\r\nimport {ErrorComponent} from './errorHandler/error.component';\r\nimport {MainPageComponent} from './mainPage/mainPage.component';\r\nimport {ResetPasswordComponent} from './user/accountRecover/resetPassword.component';\r\nimport {ForgetPasswordComponent} from './user/accountRecover/forgetPassword.component';\r\nimport {FormService} from './form/form.service';\r\nimport {UserFormsComponent} from './userForms/formsTable/userForms.component';\r\nimport {EditUserFormComponent} from './userForms/editForm/editUserForm.component';\r\nimport {ErrorPageComponent} from './errorPage/errorPage.component';\r\nimport {AdminPageComponent} from './admin/adminPage/adminPage.component';\r\nimport {AdminService} from './admin/services/admin.service';\r\nimport {EditUsersFormsComponent} from './admin/editUsersForms/editUsersForms.component';\r\nimport {AdminGuardService} from './admin/services/adminGuard';\r\nimport {AdminComponent} from './admin/admin.component';\r\nimport {UserProfileComponent} from './user/profile/userProfile.component';\r\nimport {ProfileService} from './user/profile/profile.service';\r\nimport {ChangePasswordComponent} from './user/profile/changePassword/changePassword.component';\r\nimport {AuthConfig, AuthHttp} from 'angular2-jwt';\r\nimport {CustomOption} from './config/toastr.config';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {Ng2Bs3ModalModule} from 'ng2-bs3-modal/ng2-bs3-modal';\r\nimport { LoaderComponent } from './components/loader/loader.component';\r\nimport { TabsComponent } from './components/tabs/tabs.component';\r\nimport { TabComponent } from './components/tabs/tab.component';\r\nimport { ModalComponent } from './components/modal/modal.component';\nimport { UserDashboardComponent } from './components/user-dashboard/user-dashboard.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\n\r\n\r\n\r\nexport function getAuthHttp(http) {\r\n  return new AuthHttp(new AuthConfig({\r\n    noJwtError   : true,\r\n    headerPrefix : 'JWT',\r\n    globalHeaders: [{'Content': 'application/json'}],\r\n  }), http);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    FormComponent,\r\n    UserComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    NavbarComponent,\r\n    ErrorComponent,\r\n    MainPageComponent,\r\n    ResetPasswordComponent,\r\n    ForgetPasswordComponent,\r\n    UserFormsComponent,\r\n    EditUserFormComponent,\r\n    ErrorPageComponent,\r\n    AdminPageComponent,\r\n    EditUsersFormsComponent,\r\n    AdminComponent,\r\n    UserProfileComponent,\r\n    ChangePasswordComponent,\r\n    LoaderComponent,\r\n    TabsComponent,\r\n    TabComponent,\r\n    ModalComponent,\r\n    UserDashboardComponent,\r\n    SidebarComponent,\r\n  ],\r\n  imports     : [\r\n    BrowserModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    routing,\r\n    BrowserAnimationsModule,\r\n    ToastModule.forRoot(),\r\n    Ng2Bs3ModalModule,\r\n  ],\r\n  providers   : [\r\n    AuthGuardService,\r\n    {provide: LocationStrategy, useClass: HashLocationStrategy},\r\n    AuthService,\r\n    ErrorService,\r\n    FormService,\r\n    AdminService,\r\n    AdminGuardService,\r\n    ProfileService,\r\n    {provide: ToastOptions, useClass: CustomOption},\r\n    {\r\n      provide   : AuthHttp,\r\n      useFactory: getAuthHttp,\r\n      deps      : [Http]\r\n    },\r\n  ],\r\n  bootstrap   : [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Injectable} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {Headers, Response} from '@angular/http';\r\nimport {User} from './user.model';\r\nimport {Observable} from 'rxjs';\r\nimport 'rxjs/operator/map';\r\nimport 'rxjs/operator/catch';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport {ErrorService} from '../errorHandler/error.service';\r\nimport {Reset} from './password.model';\r\nimport {AuthHttp, tokenNotExpired} from 'angular2-jwt';\r\nimport {AUTH_API_URL} from '../config/config';\r\n\r\n@Injectable()\r\n\r\nexport class AuthService {\r\n  constructor(private authHttp: AuthHttp,  private router: Router, private errorService: ErrorService, private toastr: ToastsManager) {\r\n  }\r\n\r\n  // sending request to back end to register our user\r\n  signup(user: User) {\r\n    const body    = JSON.stringify(user);\r\n    const headers = new Headers({'Content-Type': 'application/json'});\r\n    return this.authHttp.post(`${AUTH_API_URL}/register`, body, {headers: headers})\r\n      .map(response => response.json())\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n\r\n  // sending request to back end to login the user\r\n  signin(user: User) {\r\n    const body    = JSON.stringify(user);\r\n    const headers = new Headers({'Content-Type': 'application/json'});\r\n    return this.authHttp.post(`${AUTH_API_URL}/login`, body, {headers: headers})\r\n      .map((response: Response) => response.json())\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n\r\n  // sending request for password reset\r\n  forget(reset: Reset) {\r\n    const body    = JSON.stringify(reset);\r\n    const headers = new Headers({'Content-Type': 'application/json'});\r\n    return this.authHttp.post(`${AUTH_API_URL}/password`, body, {headers: headers})\r\n      .map((response: Response) => response.json())\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n\r\n  // sending request with the newly created password\r\n  reset(reset: Reset) {\r\n    const body    = JSON.stringify(reset);\r\n    const headers = new Headers({'Content-Type': 'application/json'});\r\n    return this.authHttp.post(`${AUTH_API_URL}/reset/` + reset.token, body, {headers: headers})\r\n      .map((response: Response) => response.json())\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n\r\n  // logout function to be used in html file of both pages (login/register) in order to clear the localStorage from token and user id.\r\n  logout() {\r\n    this.router.navigateByUrl('/');\r\n    localStorage.clear();\r\n    this.toastr.info('You have been logged out');\r\n  }\r\n\r\n  // check if the user is logged in or not, if token is expired, token is deleted from localstorage\r\n  isLoggedIn() {\r\n    if (!tokenNotExpired()) {\r\n      localStorage.clear();\r\n    }\r\n    return tokenNotExpired();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth.service.ts","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthService} from './auth.service';\r\nimport {ToastsManager} from 'ng2-toastr';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router, private toastr: ToastsManager) {\r\n  }\r\n\r\n  // we check if the user is logged in or not\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\r\n    // user is actually logged in\r\n    if (this.authService.isLoggedIn()) {\r\n      return true;\r\n      // user is not logged in, return the user to the login page\r\n    } else {\r\n      this.router.navigate(['/user/login']);\r\n      this.toastr.error('Please login first');\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/authguard.service.ts","export class Reset {\r\n  constructor(public email: string, public token: string, public password: string) {\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/password.model.ts","export class User {\r\n  constructor(public email: string, public password: string, public currentPassword?: string, public newPassword?: string) {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/user.model.ts","module.exports = \".loader-wraper {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.loader {\\r\\n    position: absolute;\\r\\n    left: 50%;\\r\\n    top: 50%;\\r\\n    -webkit-transform: translateX(-50%) translateY(-50%);\\r\\n            transform: translateX(-50%) translateY(-50%);\\r\\n}\\r\\n\\r\\n.loader-svg {\\r\\n    width: 35px;\\r\\n    height: 35px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loader/loader.component.css\n// module id = ./src/app/components/loader/loader.component.css\n// module chunks = main","module.exports = \"<div class=\\\"loader-wraper\\\">\\r\\n    &nbsp;\\r\\n    <div class=\\\"loader\\\">\\r\\n        <svg class=\\\"loader-svg\\\" width=\\\"45\\\" height=\\\"45\\\" viewBox=\\\"0 0 45 45\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" stroke=\\\"#fff\\\">\\r\\n        <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" transform=\\\"translate(1 1)\\\" stroke-width=\\\"2\\\">\\r\\n            <circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"6\\\" stroke-opacity=\\\"0\\\">\\r\\n                <animate attributeName=\\\"r\\\"\\r\\n                     begin=\\\"1.5s\\\" dur=\\\"3s\\\"\\r\\n                     values=\\\"6;22\\\"\\r\\n                     calcMode=\\\"linear\\\"\\r\\n                     repeatCount=\\\"indefinite\\\" />\\r\\n                <animate attributeName=\\\"stroke-opacity\\\"\\r\\n                     begin=\\\"1.5s\\\" dur=\\\"3s\\\"\\r\\n                     values=\\\"1;0\\\" calcMode=\\\"linear\\\"\\r\\n                     repeatCount=\\\"indefinite\\\" />\\r\\n                <animate attributeName=\\\"stroke-width\\\"\\r\\n                     begin=\\\"1.5s\\\" dur=\\\"3s\\\"\\r\\n                     values=\\\"2;0\\\" calcMode=\\\"linear\\\"\\r\\n                     repeatCount=\\\"indefinite\\\" />\\r\\n            </circle>\\r\\n            <circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"6\\\" stroke-opacity=\\\"0\\\">\\r\\n                <animate attributeName=\\\"r\\\"\\r\\n                     begin=\\\"3s\\\" dur=\\\"3s\\\"\\r\\n                     values=\\\"6;22\\\"\\r\\n                     calcMode=\\\"linear\\\"\\r\\n                     repeatCount=\\\"indefinite\\\" />\\r\\n                <animate attributeName=\\\"stroke-opacity\\\"\\r\\n                     begin=\\\"3s\\\" dur=\\\"3s\\\"\\r\\n                     values=\\\"1;0\\\" calcMode=\\\"linear\\\"\\r\\n                     repeatCount=\\\"indefinite\\\" />\\r\\n                <animate attributeName=\\\"stroke-width\\\"\\r\\n                     begin=\\\"3s\\\" dur=\\\"3s\\\"\\r\\n                     values=\\\"2;0\\\" calcMode=\\\"linear\\\"\\r\\n                     repeatCount=\\\"indefinite\\\" />\\r\\n            </circle>\\r\\n            <circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"8\\\">\\r\\n                <animate attributeName=\\\"r\\\"\\r\\n                     begin=\\\"0s\\\" dur=\\\"1.5s\\\"\\r\\n                     values=\\\"6;1;2;3;4;5;6\\\"\\r\\n                     calcMode=\\\"linear\\\"\\r\\n                     repeatCount=\\\"indefinite\\\" />\\r\\n            </circle>\\r\\n        </g>\\r\\n    </svg>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loader/loader.component.html\n// module id = ./src/app/components/loader/loader.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.css']\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/loader/loader.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/modal/modal.component.css\n// module id = ./src/app/components/modal/modal.component.css\n// module chunks = main","module.exports = \"<section>\\r\\n    <modal #login>\\r\\n        <div clas=\\\"modal-dialogue\\\">\\r\\n            <modal-header [show-close]=\\\"true\\\" class=\\\"text-white\\\">\\r\\n                <span class=\\\"close-text\\\">Close</span>\\r\\n            </modal-header>\\r\\n            <modal-body>\\r\\n                <div class=\\\"card wow fadeInRight\\\" data-wow-delay=\\\"0.3s\\\">\\r\\n                    <app-login></app-login>\\r\\n                </div>\\r\\n            </modal-body>\\r\\n        </div>\\r\\n    </modal>\\r\\n    <modal #register>\\r\\n        <div clas=\\\"modal-dialogue\\\">\\r\\n            <modal-header [show-close]=\\\"true\\\" class=\\\"text-white\\\">\\r\\n                <span class=\\\"close-text\\\">Close</span>\\r\\n            </modal-header>\\r\\n            <modal-body>\\r\\n                <div class=\\\"card wow fadeInRight\\\" data-wow-delay=\\\"0.3s\\\">\\r\\n                    <app-register></app-register>\\r\\n                </div>\\r\\n            </modal-body>\\r\\n        </div>\\r\\n    </modal>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/modal/modal.component.html\n// module id = ./src/app/components/modal/modal.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.css']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/modal/modal.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/sidebar/sidebar.component.css\n// module id = ./src/app/components/sidebar/sidebar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"white-label\\\" data-background-color=\\\"charcoal\\\">\\n    <img src=\\\"http://clinixmyvoice.co.za/system/uploads/Clinix%20Health%20Academy/images/logo_white.png\\\" alt=\\\"Clinix\\\">\\n</div>\\n<div id=\\\"sidebar-nav\\\">\\n    <ul class=\\\"nav\\\">\\n        <li><a class=\\\"marg-6 spacing-top\\\" routerLink=\\\"/user/forms\\\"><i class=\\\"fa fa-user \\\"></i> User Profile</a></li>\\n        <li *ngFor=\\\"let form of fetchedForms\\\"><a class=\\\"marg-6\\\" [routerLink]=\\\"['user/forms/edit', form._id]\\\"><i class=\\\"fas fa-edit\\\"> </i> Edit Profile</a></li>\\n    </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/sidebar/sidebar.component.html\n// module id = ./src/app/components/sidebar/sidebar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormService } from '../../form/form.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { ProfileService } from '../../user/profile/profile.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n  fetchedUser = [];\n  fetchedForms = [];\n  constructor(\n    private formService: FormService,\n    private authService: AuthService,\n    private profileService: ProfileService) { }\n\n  ngOnInit() {\n    setTimeout(() => {\n      if (this.authService.isLoggedIn()) {\n        let userId = localStorage.getItem('userId');\n        this.profileService.getUserDetails(userId)\n          .subscribe(\n            (data => {\n              const userArray = [];\n              // tslint:disable-next-line:forin\n              for (let key in data) {\n                userArray.push(data[key]);\n                console.log('User', data)\n              }\n              this.fetchedUser = userArray;\n            })\n          );\n      }\n      this.formService.getUserForms()\n      .subscribe(\n        forms => this.fetchedForms = forms,\n        error => console.log(error));\n    }, 50);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/sidebar/sidebar.component.ts","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-tab',\r\n    template: `\r\n    <div *ngIf=\"active\" class=\"tab-content form-wrapper\">\r\n     <div  class=\"section is-active\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n    </div>\r\n  `\r\n})\r\nexport class TabComponent {\r\n    @Input() title: string;\r\n    @Input() disabled: boolean;\r\n    @Input() active = false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/tabs/tab.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/tabs/tabs.component.css\n// module id = ./src/app/components/tabs/tabs.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n    <ul class=\\\"tab-container steps\\\" [class.nav-tabs-vertical]=\\\"vertical\\\">\\r\\n        <li *ngFor=\\\"let tab of tabs; let i = index\\\" (click)=\\\"selectTab(i)\\\" class=\\\"tab-item\\\" [class.active]=\\\"tab.active\\\" [class.disabled]=\\\"tab-disabled\\\">\\r\\n            {{tab.title}}\\r\\n        </li>\\r\\n    </ul>\\r\\n    <ng-content></ng-content>\\r\\n</div>\\r\\n\\r\\n<!-- <div class=\\\"container\\\">\\r\\n    <div class=\\\"wrapper\\\">\\r\\n        <ul class=\\\"steps\\\">\\r\\n            <li class=\\\"is-active\\\">Step 1</li>\\r\\n            <li>Step 2</li>\\r\\n            <li>Step 3</li>\\r\\n        </ul>\\r\\n        <form class=\\\"form-wrapper\\\">\\r\\n            <fieldset class=\\\"section is-active\\\">\\r\\n                <h3>Your Details</h3>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"Name\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n                <div class=\\\"button\\\">Next</div>\\r\\n            </fieldset>\\r\\n            <fieldset class=\\\"section\\\">\\r\\n                <h3>Account Type</h3>\\r\\n                <div class=\\\"row cf\\\">\\r\\n                    <div class=\\\"four col\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"r1\\\" id=\\\"r1\\\" checked>\\r\\n                        <label for=\\\"r1\\\">\\r\\n                <h4>Designer</h4>\\r\\n              </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"four col\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"r1\\\" id=\\\"r2\\\"><label for=\\\"r2\\\">\\r\\n                <h4>Developer</h4>\\r\\n              </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"four col\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"r1\\\" id=\\\"r3\\\"><label for=\\\"r3\\\">\\r\\n                <h4>Project Manager</h4>\\r\\n              </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"button\\\">Next</div>\\r\\n            </fieldset>\\r\\n            <fieldset class=\\\"section\\\">\\r\\n                <h3>Choose a Password</h3>\\r\\n                <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                <input type=\\\"password\\\" name=\\\"password2\\\" id=\\\"password2\\\" placeholder=\\\"Re-enter Password\\\">\\r\\n                <input class=\\\"submit button\\\" type=\\\"submit\\\" value=\\\"Sign Up\\\">\\r\\n            </fieldset>\\r\\n            <fieldset class=\\\"section\\\">\\r\\n                <h3>Account Created!</h3>\\r\\n                <p>Your account has now been created.</p>\\r\\n                <div class=\\\"button\\\">Reset Form</div>\\r\\n            </fieldset>\\r\\n        </form>\\r\\n    </div>\\r\\n</div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/tabs/tabs.component.html\n// module id = ./src/app/components/tabs/tabs.component.html\n// module chunks = main","import { Component, ContentChildren, QueryList, AfterContentInit, Input } from '@angular/core';\r\nimport { TabComponent } from './tab.component';\r\nimport { Console } from '@angular/core/src/console';\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: './tabs.component.html',\r\n  styleUrls: ['./tabs.component.css']\r\n})\r\n\r\nexport class TabsComponent implements AfterContentInit {\r\n  constructor() { }\r\n  activeTabs: any[];\r\n\r\n  @Input() vertical = false;\r\n  @Input() selectedIndex = 0;\r\n  @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\r\n\r\n  // contentChildren are set\r\n  ngAfterContentInit() {\r\n    // Make sure there are tabs\r\n    if (this.tabs.length) {\r\n      this.selectTab(this.selectedIndex);\r\n    }\r\n  }\r\n\r\n  selectTab(index) {\r\n\r\n    if (!this.tabs.toArray()[index].disabled) {\r\n      this.tabs.toArray().forEach(value => value.active = false);\r\n      this.tabs.toArray()[index].active = true;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/tabs/tabs.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user-dashboard/user-dashboard.component.css\n// module id = ./src/app/components/user-dashboard/user-dashboard.component.css\n// module chunks = main","module.exports = \"<p>\\n    user-dashboard works!\\n</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user-dashboard/user-dashboard.component.html\n// module id = ./src/app/components/user-dashboard/user-dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user-dashboard/user-dashboard.component.ts","// dev\r\nexport const BASE_URL      = 'http://localhost:3000';\r\nexport const ADMIN_API_URL = 'http://localhost:3000/api/admin';\r\nexport const AUTH_API_URL  = 'http://localhost:3000/api/auth';\r\nexport const USER_API_URL  = 'http://localhost:3000/api/user';\r\nexport const FORMS_API_URL = 'http://localhost:3000/api/forms';\r\n\r\n\r\n// prod\r\n// export const BASE_URL      = 'https://project-clinix.herokuapp.com/'\r\n// export const ADMIN_API_URL = 'https://project-clinix.herokuapp.com/api/admin';\r\n// export const AUTH_API_URL  = 'https://project-clinix.herokuapp.com/api/auth';\r\n// export const USER_API_URL  = 'https://project-clinix.herokuapp.com/api/user';\r\n// export const FORMS_API_URL = 'https://project-clinix.herokuapp.com/api/forms';\r\n// prod heroku\r\n// export const BASE_URL      = 'https://hlakaza.github.io/project-c/';\r\n// export const ADMIN_API_URL = 'https://hlakaza.github.io/project-c/api/admin';\r\n// export const AUTH_API_URL  = 'https://hlakaza.github.io/project-c/api/auth';\r\n// export const USER_API_URL  = 'https://hlakaza.github.io/project-c/api/user';\r\n// export const FORMS_API_URL = 'https://hlakaza.github.io/project-c/api/forms';\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/config/config.ts","import {ToastOptions} from 'ng2-toastr';\r\n\r\nexport class CustomOption extends ToastOptions {\r\n  animate           = 'flyRight'; // you can override any options available\r\n  newestOnTop       = false;\r\n  showCloseButton   = true;\r\n  positionClass     = 'toast-top-right';\r\n  preventDuplicates = true;\r\n  showMethod        = 'fadeIn';\r\n  hideMethod        = 'fadeOut';\r\n  showEasing        = 'swing';\r\n  hideEasing        = 'linear';\r\n  onclick           = null;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/config/toastr.config.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/errorHandler/error.component.html\n// module id = ./src/app/errorHandler/error.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {ErrorService} from './error.service';\r\nimport {ToastsManager} from 'ng2-toastr';\r\n\r\n\r\n@Component({\r\n  selector   : 'app-error',\r\n  templateUrl: './error.component.html'\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  error: Error;\r\n\r\n  constructor(private errorService: ErrorService, private toastr: ToastsManager) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.errorService.errorOccured\r\n      .subscribe(\r\n        (error: Error) => {\r\n          this.error = error;\r\n          this.toastr.error(this.error.message);\r\n        });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/errorHandler/error.component.ts","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {Error} from './error';\r\n\r\n@Injectable()\r\n\r\nexport class ErrorService {\r\n\r\n  errorOccured = new EventEmitter<Error>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  handleError(error: any) {\r\n    const errorData = new Error(error.error.message);\r\n    this.errorOccured.emit(errorData);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/errorHandler/error.service.ts","export class Error {\r\n  constructor(public message?: string) {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/errorHandler/error.ts","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"container topPad text-center\\\">\\r\\n  <h2>404, page not found!</h2>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/errorPage/errorPage.component.html\n// module id = ./src/app/errorPage/errorPage.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector   : 'app-error-page',\r\n  templateUrl: './errorPage.component.html'\r\n})\r\nexport class ErrorPageComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/errorPage/errorPage.component.ts","module.exports = \"<div class=\\\"card spacing-bottom\\\">\\r\\n    <!--Header-->\\r\\n    <div class=\\\"card-header\\\" data-background-color=\\\"charcoal\\\">\\r\\n        <h4 class=\\\"title\\\">Add Details</h4>\\r\\n        <p class=\\\"category\\\">Provide your details in the form below</p>\\r\\n    </div>\\r\\n    <div class=\\\"card-content\\\">\\r\\n\\r\\n        <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"submitForm()\\\" class=\\\"form-horizontal register-form clearfix\\\" novalidate>\\r\\n            <fieldset>\\r\\n                <app-tabs #t>\\r\\n                    <app-tab title=\\\"Company Information\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--Trading Name-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"clearfix pad-top-10\\\">\\r\\n                                    <div class=\\\"md-form\\\" [ngClass]=\\\"{ 'has-error': myForm.get('tradingName').hasError('required') && myForm.get('tradingName').touched }\\\">\\r\\n                                        <i class=\\\"fa fa-building prefix grey-text\\\"></i>\\r\\n                                        <input class=\\\"form-control\\\" formControlName=\\\"tradingName\\\" name=\\\"tradingName\\\" type=\\\"text\\\" required/>\\r\\n                                        <label class=\\\"grey-text\\\" for=\\\"tradingName\\\" class=\\\"grey-text\\\">Trading Name</label>\\r\\n                                        <span *ngIf=\\\"myForm.get('tradingName').hasError('required') && myForm.get('tradingName').touched\\\" class=\\\"help-block text-danger\\\">Trading Name is required</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--Company Name-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"clearfix pad-top-10\\\">\\r\\n                                    <div class=\\\"md-form\\\" [ngClass]=\\\"{ 'has-error': myForm.get('registeredCompanyName').hasError('required') && myForm.get('registeredCompanyName').touched }\\\">\\r\\n                                        <i class=\\\"fa fa-building prefix grey-text\\\"></i>\\r\\n                                        <input class=\\\"form-control\\\" formControlName=\\\"registeredCompanyName\\\" name=\\\"registeredCompanyName\\\" type=\\\"text\\\" />\\r\\n                                        <label class=\\\"grey-text\\\" for=\\\"registeredCompanyName\\\">Registered Company Name</label>\\r\\n                                        <span *ngIf=\\\"myForm.get('registeredCompanyName').hasError('required') && myForm.get('registeredCompanyName').touched\\\" class=\\\"help-block text-danger\\\">Company Name is required</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--Registration Number-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"clearfix pad-top-10\\\">\\r\\n                                    <div class=\\\"md-form\\\" [ngClass]=\\\"{ 'has-error': myForm.get('registrationNumber').hasError('required') && myForm.get('registrationNumber').touched }\\\">\\r\\n                                        <i class=\\\"fa fa-edit prefix grey-text\\\"></i>\\r\\n                                        <input class=\\\"form-control\\\" formControlName=\\\"registrationNumber\\\" name=\\\"registrationNumber\\\" type=\\\"text\\\" />\\r\\n                                        <label class=\\\"grey-text\\\" for=\\\"registrationNumber\\\">Registration Number</label>\\r\\n                                        <span *ngIf=\\\"myForm.get('registrationNumber').hasError('required') && myForm.get('registrationNumber').touched\\\" class=\\\"help-block text-danger\\\">Registration Number is required</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--confirm Registration Number-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"clearfix pad-top-10\\\">\\r\\n                                    <div class=\\\"md-form\\\" [ngClass]=\\\"{ 'has-error': myForm.get('confirmRegNumber').hasError('required') && myForm.get('confirmRegNumber').touched }\\\">\\r\\n                                        <i class=\\\"fa fa-edit prefix grey-text\\\"></i>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"confirmRegNumber\\\" name=\\\"confirmRegNumber\\\" />\\r\\n                                        <label class=\\\"grey-text\\\" for=\\\"confirmRegNumber\\\">Confirm Registration Number</label>\\r\\n                                        <span *ngIf=\\\"myForm.get('confirmRegNumber').hasError('regNumberMatch') && myForm.get('confirmRegNumber').touched\\\" class=\\\"help-block text-danger\\\">Registration Numbers do not match</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--Vat Number-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"md-form\\\">\\r\\n                                    <i class=\\\"fa fa-archive prefix grey-text\\\"></i>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"vatNumber\\\" name=\\\"vatNumber\\\" />\\r\\n                                    <label class=\\\"grey-text\\\" for=\\\"vatNumber\\\">Vat Number</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('vatNumber').hasError('required') && myForm.get('vatNumber').touched\\\" class=\\\"help-block text-danger\\\">VatNumber is required</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <!--Confirm Vat Number-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"md-form\\\">\\r\\n                                    <i class=\\\"fa fa-archive prefix grey-text\\\"></i>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"confirmVatNumber\\\" name=\\\"confirmVatNumber\\\" />\\r\\n                                    <label class=\\\"grey-text\\\" for=\\\"confirmVatNumber\\\">confirm Vat Number</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('confirmVatNumber').hasError('vatNumberMatch') && myForm.get('confirmVatNumber').touched\\\" class=\\\"help-block text-danger\\\">Vat Numbers do not match</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--Address-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"md-form\\\">\\r\\n                                    <i class=\\\"far fa-address-card prefix grey-text\\\"></i>\\r\\n                                    <textarea type=\\\"text\\\" formControlName=\\\"physicalAddress\\\" name=\\\"physicalAddress\\\" class=\\\"form-control md-textarea\\\"></textarea>\\r\\n                                    <label class=\\\"grey-text\\\" for=\\\"physicalAddress\\\">Physical Address</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('physicalAddress').hasError('required') && myForm.get('physicalAddress').touched\\\" class=\\\"help-block text-danger\\\">Physical Address is required</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--Postal Address-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"md-form\\\">\\r\\n                                    <i class=\\\"far fa-address-card prefix grey-text\\\"></i>\\r\\n                                    <textarea type=\\\"text\\\" formControlName=\\\"postalAddress\\\" name=\\\"postalAddress\\\" class=\\\"form-control md-textarea\\\"></textarea>\\r\\n                                    <label class=\\\"grey-text\\\" for=\\\"postalAddress\\\">Postal Address</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('postalAddress').hasError('required') && myForm.get('postalAddress').touched\\\" class=\\\"help-block text-danger\\\">Postal Address is required</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--Phone Number-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"md-form \\\">\\r\\n                                    <i class=\\\"fa fa-phone prefix grey-text\\\"></i>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"tel\\\" name=\\\"tel\\\" />\\r\\n                                    <label class=\\\"grey-text\\\" for=\\\"tel\\\">Telephone Number</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('tel').hasError('required') && myForm.get('tel').touched\\\" class=\\\"help-block text-danger\\\">Your work Telephone Number is required</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <!--Fax Number-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"md-form\\\">\\r\\n                                    <i class=\\\"fa fa-fax prefix grey-text\\\"></i>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"faxNo\\\" name=\\\"faxNo\\\" />\\r\\n                                    <label class=\\\"grey-text\\\" for=\\\"faxNo\\\">Fax Number</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('faxNo').hasError('required') && myForm.get('faxNo').touched\\\" class=\\\"help-block text-danger\\\">Fax number is required</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--Website-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"md-form\\\">\\r\\n                                    <i class=\\\"fa fa-globe prefix grey-text\\\"></i>\\r\\n                                    <textarea type=\\\"text\\\" formControlName=\\\"website\\\" name=\\\"website\\\" class=\\\"form-control md-textarea\\\"></textarea>\\r\\n                                    <label class=\\\"grey-text\\\" for=\\\"website\\\">Website</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('website').hasError('required') && myForm.get('website').touched\\\" class=\\\"help-block text-danger\\\">Website is required</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"float-right deep-orange-text display-block\\\" (click)=\\\"t.selectTab(1)\\\">Next <i class=\\\"fa fa-angle-right\\\"></i></span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </app-tab>\\r\\n                    <app-tab title=\\\"Correspondence\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--Acc Person  Name-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"clearfix pad-top-10\\\">\\r\\n                                    <div class=\\\"md-form\\\" [ngClass]=\\\"{ 'has-error': myForm.get('accPersonName').hasError('required') && myForm.get('accPersonName').touched }\\\">\\r\\n                                        <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\r\\n                                        <input class=\\\"form-control\\\" formControlName=\\\"accPersonName\\\" name=\\\"accPersonName\\\" type=\\\"text\\\" />\\r\\n                                        <span *ngIf=\\\"myForm.get('accPersonName').hasError('required') && myForm.get('accPersonName').touched\\\" class=\\\"help-block text-danger\\\">Accounts Person Name is required</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--Email-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"clearfix pad-top-10\\\">\\r\\n                                    <div class=\\\"md-form\\\">\\r\\n                                        <i class=\\\"far fa-envelope prefix grey-text\\\"></i>\\r\\n                                        <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"accPersonEmail\\\" name=\\\"accPersonEmail\\\" />\\r\\n                                        <span *ngIf=\\\"myForm.get('accPersonEmail').hasError('required') && myForm.get('accPersonEmail').touched\\\" class=\\\"help-block text-danger\\\">Email is required</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--Acc Person Number-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"clearfix \\\">\\r\\n                                    <div class=\\\"md-form\\\" [ngClass]=\\\"{ 'has-error': myForm.get('accPersonNo').hasError('required') && myForm.get('accPersonNo').touched }\\\">\\r\\n                                        <i class=\\\"fa fa-phone prefix grey-text\\\"></i>\\r\\n                                        <input class=\\\"form-control\\\" formControlName=\\\"accPersonNo\\\" name=\\\"accPersonNo\\\" type=\\\"text\\\" />\\r\\n                                        <span *ngIf=\\\"myForm.get('accPersonNo').hasError('required') && myForm.get('accPersonNo').touched\\\" class=\\\"help-block text-danger\\\">Phone Number is required</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--Acc Person Fax Number-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"clearfix \\\">\\r\\n                                    <div class=\\\"md-form\\\" [ngClass]=\\\"{ 'has-error': myForm.get('accPersonFaxNo').hasError('required') && myForm.get('accPersonFaxNo').touched }\\\">\\r\\n                                        <i class=\\\"fa fa-fax prefix grey-text\\\"></i>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"accPersonFaxNo\\\" name=\\\"accPersonFaxNo\\\" />\\r\\n                                        <span *ngIf=\\\"myForm.get('accPersonFaxNo').hasError('accPersonFaxNo') && myForm.get('accPersonFaxNo').touched\\\" class=\\\"help-block text-danger\\\">Fax Number is required</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--Sales Person  Name-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"clearfix \\\">\\r\\n                                    <div class=\\\"md-form\\\" [ngClass]=\\\"{ 'has-error': myForm.get('salesPersonName').hasError('required') && myForm.get('salesPersonName').touched }\\\">\\r\\n                                        <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\r\\n                                        <input class=\\\"form-control\\\" formControlName=\\\"salesPersonName\\\" name=\\\"salesPersonName\\\" type=\\\"text\\\" />\\r\\n                                        <span *ngIf=\\\"myForm.get('salesPersonName').hasError('required') && myForm.get('salesPersonName').touched\\\" class=\\\"help-block text-danger\\\">Sales Person Name is required</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--Email-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"clearfix \\\">\\r\\n                                    <div class=\\\"md-form\\\">\\r\\n                                        <i class=\\\"far fa-envelope prefix grey-text\\\"></i>\\r\\n                                        <input placeholder=\\\"Email\\\" type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"salesPersonEmail\\\" name=\\\"salesPersonEmail\\\" />\\r\\n                                        <span *ngIf=\\\"myForm.get('salesPersonEmail').hasError('required') && myForm.get('salesPersonEmail').touched\\\" class=\\\"help-block text-danger\\\">Email is required</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--Sales Person Number-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"clearfix \\\">\\r\\n                                    <div class=\\\"md-form\\\" [ngClass]=\\\"{ 'has-error': myForm.get('salesPersonNo').hasError('required') && myForm.get('salesPersonNo').touched }\\\">\\r\\n                                        <i class=\\\"fa fa-phone prefix grey-text\\\"></i>\\r\\n                                        <input class=\\\"form-control\\\" formControlName=\\\"salesPersonNo\\\" name=\\\"salesPersonNo\\\" type=\\\"text\\\" />\\r\\n                                        <span *ngIf=\\\"myForm.get('salesPersonNo').hasError('required') && myForm.get('salesPersonNo').touched\\\" class=\\\"help-block text-danger\\\">Phone Number is required</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--Sales Person Fax Number-->\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"clearfix \\\">\\r\\n                                    <div class=\\\"md-form\\\" [ngClass]=\\\"{ 'has-error': myForm.get('salesPersonFaxNo').hasError('required') && myForm.get('salesPersonFaxNo').touched }\\\">\\r\\n                                        <i class=\\\"fa fa-fax prefix grey-text\\\"></i>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"salesPersonFaxNo\\\" name=\\\"salesPersonFaxNo\\\" />\\r\\n                                        <span *ngIf=\\\"myForm.get('salesPersonFaxNo').hasError('salesPersonFaxNo') && myForm.get('salesPersonFaxNo').touched\\\" class=\\\"help-block text-danger\\\">Fax Number is required</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--Type of business-->\\r\\n                            <div class=\\\"col-md-6 pad-top-10\\\">\\r\\n                                <div class=\\\"clearfix\\\">\\r\\n                                    <div class=\\\"md-form\\\">\\r\\n                                        <label class=\\\"text-left select-label grey-text\\\">Business Sector:</label>\\r\\n                                        <i class=\\\"fa fa-fax prefix grey-text\\\"></i>\\r\\n                                        <select type=\\\"text\\\" formControlName=\\\"serviceProduct\\\" class=\\\"form-control label-text grey-text\\\" id=\\\"exampleSelect1\\\">\\r\\n                                                    <option>Pharmaceutical</option>\\r\\n                                                    <option>None Pharmaceutical</option>\\r\\n                                                    <option name=\\\"service\\\">Service and Product</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6 pad-top-10\\\">\\r\\n                                <div class=\\\"clearfix\\\">\\r\\n                                    <div class=\\\"md-form\\\">\\r\\n                                        <i class=\\\"fa fa-fax prefix grey-text\\\"></i>\\r\\n                                        <label class=\\\"grey-text\\\" for=\\\"tel\\\">Please Specify the Service &amp; Product </label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"serviceProductInfo\\\" name=\\\"service\\\" />\\r\\n                                        <span *ngIf=\\\"myForm.get('serviceProductInfo').hasError('serviceProductInfo') && myForm.get('serviceProductInfo').touched\\\" class=\\\"help-block text-danger\\\">Service &amp; product type required</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"float-right deep-orange-text display-block\\\" (click)=\\\"t.selectTab(2)\\\">Next <i class=\\\"fa fa-angle-right\\\"></i></span>\\r\\n                                <span class=\\\"float-left deep-orange-text display-block\\\" (click)=\\\"t.selectTab(0)\\\"><i class=\\\"fa fa-angle-left\\\"></i> Back</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </app-tab>\\r\\n                    <app-tab title=\\\"Rquired Documents\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"card red lighten-1 text-center z-depth-2 spacing-bottom spacing-top\\\">\\r\\n                                    <div class=\\\"card-body\\\">\\r\\n                                        <p class=\\\"white-text mb-0 font-8\\\">Please upload these documents, Customer General Terms and Conditions, BEE Certificate, Tax Certificate, Letter of Good Standing, Audited latest Financial Statements, Proof of Banking Details, Company Letterhead,\\r\\n                                            Declaration of possible conflict of Interest with Clinix Health Group (CHG), Product Price list, Identity documents of directors.</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"col-sm-12\\\">\\r\\n                                        <div class=\\\"file-field\\\">\\r\\n                                            <div class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                                <span>Upload</span>\\r\\n                                                <input type=\\\"file\\\" name=\\\"docs\\\" (change)=\\\"onFileChange($event)\\\" #fileInput accept=\\\"PDF, JPG, DOCX,\\r\\n                                                        PNG\\\" multiple>\\r\\n                                            </div>\\r\\n\\r\\n                                            <div class=\\\"file-path-wrapper\\\" *ngFor=\\\"let item of files; let i = index\\\">\\r\\n                                                <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"item.name\\\" value=\\\"{{item.name}}\\\">\\r\\n                        \\r\\n                                            </div>\\r\\n                                            <div class=\\\"file-path-wrapper\\\" *ngIf=\\\"filesCount < 1\\\">\\r\\n                                                <input class=\\\"file-path validate\\\" type=\\\"text\\\" placeholder=\\\"Please Select all your documents\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div> -->\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"file-field\\\">\\r\\n                                    <div class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <span>Upload</span>\\r\\n                                        <input type=\\\"file\\\" name=\\\"file-1[]\\\" id=\\\"file-1\\\" class=\\\"inputfile inputfile-1\\\" #fileInput name=\\\"fileUp\\\" (change)=\\\"onFileSelect($event)\\\" multiple/>\\r\\n                                        <!-- <input type=\\\"file\\\" name=\\\"docs\\\" (change)=\\\"onFileChange1($event)\\\" #fileInput1 accept=\\\"PDF, JPG, DOCX,\\r\\n                                                        PNG\\\" multiple> -->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"file-path-wrapper\\\" *ngFor=\\\"let item of files; let i = index\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"item.name\\\" value=\\\"{{item.name}}\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"item < 1\\\" placeholder=\\\"BEE Certificate\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <input type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" placeholder=\\\"Upload file...\\\" />\\r\\n                                <button type=\\\"button\\\" (click)=\\\"upload()\\\">Upload</button>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"file-field\\\">\\r\\n                                    <div class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <span>Upload</span>\\r\\n                                        <input type=\\\"file\\\" name=\\\"docs\\\" (change)=\\\"onFileChange($event)\\\" #fileInput2 accept=\\\"PDF, JPG, DOCX,\\r\\n                                                        PNG\\\" multiple>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"file-path-wrapper\\\" *ngFor=\\\"let item of files; let i = index\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"item.name\\\" value=\\\"{{item.name}}\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"!item.name\\\" placeholder=\\\"Letter of Good Standing\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"file-field\\\">\\r\\n                                    <div class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <span>Upload</span>\\r\\n                                        <input type=\\\"file\\\" name=\\\"docs\\\" (change)=\\\"onFileChange($event)\\\" #fileInput3 accept=\\\"PDF, JPG, DOCX,\\r\\n                                                        PNG\\\" multiple>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"file-path-wrapper\\\" *ngFor=\\\"let item of files; let i = index\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"item.name\\\" value=\\\"{{item.name}}\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"!item.name\\\" placeholder=\\\"Audited latest Financial Statements\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"file-field\\\">\\r\\n                                    <div class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <span>Upload</span>\\r\\n                                        <input type=\\\"file\\\" name=\\\"docs\\\" (change)=\\\"onFileChange($event)\\\" #fileInput4 accept=\\\"PDF, JPG, DOCX,\\r\\n                                                        PNG\\\" multiple>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"file-path-wrapper\\\" *ngFor=\\\"let item of files; let i = index\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"item.name\\\" value=\\\"{{item.name}}\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"!item.name\\\" placeholder=\\\"Proof of Banking Details\\\">\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"file-field\\\">\\r\\n                                    <div class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <span>Upload</span>\\r\\n                                        <input type=\\\"file\\\" name=\\\"docs\\\" (change)=\\\"onFileChange($event)\\\" #fileInput5 accept=\\\"PDF, JPG, DOCX,\\r\\n                                                        PNG\\\" multiple>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"file-path-wrapper\\\" *ngFor=\\\"let item of files; let i = index\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"item.name\\\" value=\\\"{{item.name}}\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"!item.name\\\" placeholder=\\\"Company Letterhead\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"file-field\\\">\\r\\n                                    <div class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <span>Upload</span>\\r\\n                                        <input type=\\\"file\\\" name=\\\"docs\\\" (change)=\\\"onFileChange($event)\\\" #fileInput6 accept=\\\"PDF, JPG, DOCX,\\r\\n                                                        PNG\\\" multiple>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"file-path-wrapper\\\" *ngFor=\\\"let item of files; let i = index\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"item.name\\\" value=\\\"{{item.name}}\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"!item.name\\\" placeholder=\\\"Tax Certificate\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"file-field\\\">\\r\\n                                    <div class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <span>Upload</span>\\r\\n                                        <input type=\\\"file\\\" name=\\\"docs\\\" (change)=\\\"onFileChange($event)\\\" #fileInput7 accept=\\\"PDF, JPG, DOCX,\\r\\n                                                        PNG\\\" multiple>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"file-path-wrapper\\\" *ngFor=\\\"let item of files; let i = index\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"item.name\\\" value=\\\"{{item.name}}\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"!item.name\\\" placeholder=\\\"MCC Certificate\\\">\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"file-field\\\">\\r\\n                                    <div class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <span>Upload</span>\\r\\n                                        <input type=\\\"file\\\" name=\\\"docs\\\" (change)=\\\"onFileChange($event)\\\" #fileInput8 accept=\\\"PDF, JPG, DOCX,\\r\\n                                                        PNG\\\" multiple>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"file-path-wrapper\\\" *ngFor=\\\"let item of files; let i = index\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"item.name\\\" value=\\\"{{item.name}}\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"!item.name\\\" placeholder=\\\"Declaration of possible conflict of Interest with Clinix Health Group (CHG)\\\">\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"file-field\\\">\\r\\n                                    <div class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <span>Upload</span>\\r\\n                                        <input type=\\\"file\\\" name=\\\"docs\\\" (change)=\\\"onFileChange($event)\\\" #fileInput9 accept=\\\"PDF, JPG, DOCX,\\r\\n                                                        PNG\\\" multiple>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"file-path-wrapper\\\" *ngFor=\\\"let item of files; let i = index\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"item.name\\\" value=\\\"{{item.name}}\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"!item.name\\\" placeholder=\\\"Copies of Identification Document (ID) of Directors\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"file-field\\\">\\r\\n                                    <div class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <span>Upload</span>\\r\\n                                        <input type=\\\"file\\\" name=\\\"docs\\\" (change)=\\\"onFileChange($event)\\\" #fileInput10 accept=\\\"PDF, JPG, DOCX,\\r\\n                                                        PNG\\\" multiple>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"file-path-wrapper\\\" *ngFor=\\\"let item of files; let i = index\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"item.name\\\" value=\\\"{{item.name}}\\\">\\r\\n                                        <input class=\\\"file-path validate\\\" type=\\\"text\\\" *ngIf=\\\"!item.name\\\" placeholder=\\\"Product price list\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"float-left deep-orange-text display-block\\\" (click)=\\\"t.selectTab(0)\\\"><i class=\\\"fa fa-angle-left\\\"></i> Back</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </app-tab>\\r\\n                </app-tabs>\\r\\n\\r\\n                <!-- Button -->\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\" id=\\\"submitForm\\\" name=\\\"sumbitForm\\\" class=\\\"btn btn-primary btn-sm text-center\\\">Submit</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/form/form.component.html\n// module id = ./src/app/form/form.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/form/form.component.scss\n// module id = ./src/app/form/form.component.scss\n// module chunks = main","import {AfterViewInit, Component, ElementRef, EventEmitter, OnInit, Renderer, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../auth/auth.service';\r\nimport {BASE_URL, FORMS_API_URL} from '../config/config';\r\nimport {ModalComponent} from 'ng2-bs3-modal/components/modal';\r\nimport {FormService} from './form.service';\r\nimport {Form} from './form.model';\r\nimport { vatNumberMatch, regNumberMatch } from '../validators/input-match';\r\nimport { ProfileService } from '../user/profile/profile.service';\r\nimport { empty } from 'rxjs/observable/empty';\r\n@Component({\r\n  selector   : 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls  : ['./form.component.scss']\r\n})\r\nexport class FormComponent implements OnInit, AfterViewInit {\r\n  fetchedUser: any[] = [];\r\n  filesToUpload: Array<File>;\r\n  // setting up the form\r\n  myForm: FormGroup;\r\n  tradingName: FormControl;\r\n  registeredCompanyName: FormControl;\r\n  registrationNumber: FormControl;\r\n  physicalAddress: FormControl;\r\n  postalAddress: FormControl;\r\n  tel: FormControl;\r\n  faxNo: FormControl;\r\n  website: FormControl;\r\n  vatNumber: FormControl;\r\n  accPersonName: FormControl;\r\n  accPersonNo: FormControl;\r\n  accPersonFaxNo: FormControl;\r\n  accPersonEmail: FormControl;\r\n  salesPersonName: FormControl;\r\n  salesPersonNo: FormControl;\r\n  salesPersonEmail: FormControl;\r\n  salesPersonFaxNo: FormControl;\r\n  serviceProduct: FormControl;\r\n  serviceProductInfo: FormControl;\r\n\r\n  // get the Auth Token from localStorage in order to Authenticate to back end while submitting the form\r\n  token: string  = localStorage.getItem('id_token');\r\n  url  = `${FORMS_API_URL}/image`;\r\n  fileUrl  = `${FORMS_API_URL}/files`;\r\n  imageUrl = `${BASE_URL}/uploads/tmp/`;\r\n  maxSize  = 5000000;\r\n  invalidFileSizeMessage = '{0}: Invalid file size, ';\r\n  invalidFileSizeMessageDetail = 'Maximum upload size is {0}.';\r\n  public files: File[];\r\n  public progress  = 0;\r\n  public submitStarted: boolean;\r\n  public imageReady   = false;\r\n  public imagePath: string;\r\n  name: string;\r\n  onClear: EventEmitter<any>   = new EventEmitter();\r\n  /**\r\n   * Upload File\r\n   */\r\n  loading = false;\r\n  // maxSize = 10;\r\n  usedSize = 0;\r\n  filesCount: number;\r\n  validExtension: any[];\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n  @ViewChild('imageDeleteModal') imageDeleteModal: ModalComponent;\r\n\r\n  deleteImage() {\r\n    this.imageDeleteModal.dismiss();\r\n    this.formService.deleteImage(this.imagePath)\r\n      .subscribe(data => {\r\n      });\r\n    this.imageReady = false;\r\n    this.clear();\r\n  }\r\n\r\n  dismissImageDelete() {\r\n    this.imageDeleteModal.close();\r\n  }\r\n  constructor(private fb: FormBuilder,\r\n              private toastr: ToastsManager,\r\n              private router: Router,\r\n              private renderer: Renderer,\r\n              private authService: AuthService,\r\n              private formService: FormService,\r\n              private profileService: ProfileService\r\n\r\n            ) {\r\n              this.filesToUpload = [];\r\n  }\r\n\r\n// New File Upload\r\nupload() {\r\n  this.makeFileRequest(this.fileUrl, [], this.filesToUpload).then((result) => {\r\n      console.log(result);\r\n  }, (error) => {\r\n      console.error(error);\r\n  });\r\n}\r\n\r\nfileChangeEvent(fileInput: any) {\r\n  this.filesToUpload = <Array<File>> fileInput.target.files;\r\n}\r\n\r\nmakeFileRequest(fileUrl: string, params: Array<string>, files: Array<File>) {\r\n  return new Promise((resolve, reject) => {\r\n      let formData: any = new FormData();\r\n      let xhr = new XMLHttpRequest();\r\n      for (let i = 0; i < files.length; i++) {\r\n          formData.append('uploads[]', files[i], files[i].name);\r\n      }\r\n      xhr.onreadystatechange = function () {\r\n          if (xhr.readyState === 4) {\r\n              if (xhr.status === 200) {\r\n                  resolve(JSON.parse(xhr.response));\r\n              } else {\r\n                  reject(xhr.response);\r\n              }\r\n          }\r\n      }\r\n      xhr.open('POST', fileUrl, true);\r\n      xhr.setRequestHeader('Authorization', 'JWT ' + this.token)\r\n      xhr.send(formData);\r\n  });\r\n}\r\n// New File Upload\r\nonFileChange(event) {\r\n  this.usedSize = 0;\r\n  if (event.target.files && event.target.files.length > 0) {\r\n    for (let i = 0; i < event.target.files.length; i++) {\r\n\r\n      if (event.target.files[i].name.match(/.jpeg|.jpg|.png|.doc|.pdf|.docx|.gif/gi)) {\r\n        this.files.push(event.target.files[i]);\r\n        this.usedSize += event.target.files[i].size;\r\n        this.filesCount += 1;\r\n      }\r\n    }\r\n  }\r\n}\r\n  onFileSelect(event) {\r\n    this.clear();\r\n    this.submitStarted = true;\r\n    let files  = event.dataTransfer ? event.dataTransfer.files : event.target.files;\r\n    for (let i = 0; i < files.length; i++) {\r\n      let file = files[i];\r\n      if (this.validate(file)) {\r\n        if (this.isFile(file)) {\r\n          this.files.push(files[i]);\r\n          let xhr      = new XMLHttpRequest();\r\n          let formData = new FormData();\r\n\r\n          // tslint:disable-next-line:no-shadowed-variable\r\n          for (let i = 0; i < this.files.length; i++) {\r\n            formData.append('fileUp', this.files[i], this.files[i].name);\r\n          }\r\n          xhr.onreadystatechange = () => {\r\n            if (xhr.readyState === 4) {\r\n              this.progress = 0;\r\n              if (xhr.status === 201) {\r\n                this.imagePath     = xhr.response.replace(/^\"|\"$/g, '');\r\n                this.imageReady    = true;\r\n                this.submitStarted = false;\r\n              } else if (xhr.status !== 201) {\r\n                this.toastr.error('There was a problem, please try again later');\r\n                this.submitStarted = false;\r\n                this.clear();\r\n              }\r\n              this.clear();\r\n            }\r\n          };\r\n          xhr.upload.addEventListener('progress', (e: ProgressEvent) => {\r\n            if (e.lengthComputable) {\r\n              this.progress = Math.round((e.loaded * 100) / e.total);\r\n            }\r\n          }, false);\r\n\r\n          xhr.open('POST', this.url, true);\r\n          xhr.setRequestHeader('Authorization', 'JWT ' + this.token);\r\n          xhr.send(formData);\r\n\r\n        }\r\n      } else if (!this.isFile(file)) {\r\n        this.toastr.error('Only pdf, doc, jpep and png`s are allowed');\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  // check if the image is actually an image by checking the mime type\r\n  isFile(file: File): boolean {\r\n    if (!file.type.match(/.jpeg|.jpg|.png|.pdf|.doc|.docx|.gif/gi)) {\r\n      this.toastr.error('Only pdf, doc, jpep and png`s are allowed');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // check if the form has files ready to be uploaded\r\n  hasFiles(): boolean {\r\n    return this.files && this.files.length > 0;\r\n  }\r\n\r\n  // clears the form\r\n  clear() {\r\n    this.files = [];\r\n    this.onClear.emit();\r\n  }\r\n\r\n  // remove the image from the preview\r\n  remove(index: number) {\r\n    this.files.splice(index, 1);\r\n    this.fileInput.nativeElement.value = '';\r\n  }\r\n\r\n  // check the image file size\r\n  validate(file: File): boolean {\r\n    if (this.maxSize && file.size > this.maxSize) {\r\n      this.toastr.error(this.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.maxSize)),\r\n        this.invalidFileSizeMessage.replace('{0}', file.name));\r\n      this.submitStarted = false;\r\n      this.clear();\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n// format the size to display it in toastr in case the user uploaded a file bigger than 5MB\r\n  formatSize(bytes) {\r\n    if (bytes === 0) {\r\n      return '0 B';\r\n    }\r\n    let k     = 1000,\r\n        dm    = 3,\r\n        sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n        i     = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.files = [];\r\n    this.myForm = this.fb.group({\r\n      tradingName: new FormControl(null, Validators.required),\r\n      registeredCompanyName: new FormControl(null, Validators.required),\r\n      registrationNumber: new FormControl(null, Validators.required),\r\n      confirmRegNumber: new FormControl({ value: null, disabled: false }, [Validators.required, regNumberMatch]),\r\n      physicalAddress: new FormControl(null, Validators.required),\r\n      postalAddress: new FormControl(null, Validators.required),\r\n      tel: new FormControl(null, Validators.required),\r\n      faxNo: new FormControl(null, Validators.required),\r\n      vatNumber: new FormControl(null, Validators.required),\r\n      website: new FormControl(null, Validators.required),\r\n      confirmVatNumber: new FormControl({ value: null, disabled: false }, [Validators.required, vatNumberMatch]),\r\n      accPersonName: new FormControl(null, Validators.required),\r\n      accPersonNo: new FormControl(null, Validators.required),\r\n      accPersonFaxNo: new FormControl(null, Validators.required),\r\n      accPersonEmail: new FormControl(null, Validators.required),\r\n      salesPersonName: new FormControl(null, Validators.required),\r\n      salesPersonNo: new FormControl(null, Validators.required),\r\n      salesPersonEmail: new FormControl(null, Validators.required),\r\n      salesPersonFaxNo: new FormControl(null, Validators.required),\r\n      serviceProduct: new FormControl(null, Validators.required),\r\n      serviceProductInfo: new FormControl(null, Validators.required),\r\n      });\r\n  }\r\n\r\n  // focus on first input box after the view is initialized\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      if (this.authService.isLoggedIn()) {\r\n        let userId = localStorage.getItem('userId');\r\n        this.profileService.getUserDetails(userId)\r\n          .subscribe(\r\n            (data => {\r\n              const userArray = [];\r\n              // tslint:disable-next-line:forin\r\n              for (let key in data) {\r\n                userArray.push(data[key]);\r\n              }\r\n              this.fetchedUser = userArray;\r\n            })\r\n          );\r\n      }\r\n    }, 50);\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  logout() {\r\n    return this.authService.logout();\r\n  }\r\n  // submit the form to back end\r\n\r\n  submitForm() {\r\n    this.submitStarted = true;\r\n    const newForm      = new Form(\r\n      this.myForm.value.tradingName,\r\n      this.myForm.value.registeredCompanyName,\r\n      this.myForm.value.registrationNumber,\r\n      this.myForm.value.physicalAddress,\r\n      this.myForm.value.postalAddress,\r\n      this.myForm.value.tel,\r\n      this.myForm.value.faxNo,\r\n      this.myForm.value.website,\r\n      this.myForm.value.vatNumber,\r\n      this.myForm.value.accPersonName,\r\n      this.myForm.value.accPersonNo,\r\n      this.myForm.value.accPersonFaxNo,\r\n      this.myForm.value.accPersonEmail,\r\n      this.myForm.value.salesPersonName,\r\n      this.myForm.value.salesPersonNo,\r\n      this.myForm.value.salesPersonFaxNo,\r\n      this.myForm.value.salesPersonEmail,\r\n      this.imagePath\r\n    );\r\n    console.log(this.imagePath);\r\n    /**\r\n     * disabling the submiting of form if files are null\r\n     */\r\n    // if (this.imageReady) {\r\n    //   this.formService.submitNewForm(newForm)\r\n    //     .subscribe(\r\n    //       data => {\r\n    //         this.router.navigateByUrl('/user/forms');\r\n    //         this.toastr.success('Form submitted successfully');\r\n    //       },\r\n    //       error => {\r\n    //         this.submitStarted = false;\r\n    //         this.toastr.error('There was an error, please try again later');\r\n    //       });\r\n    // } else {\r\n    //   this.submitStarted = false;\r\n    //   this.toastr.info('Please select an image', 'Attention', {toastLife: 5000});\r\n    //\r\n\r\n    this.formService.submitNewForm(newForm)\r\n        .subscribe(\r\n          data => {\r\n            this.router.navigateByUrl('/user/forms');\r\n            this.toastr.success('Form submitted successfully');\r\n          },\r\n          error => {\r\n            this.submitStarted = false;\r\n            this.toastr.error('There was an error, please try again later');\r\n     });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/form/form.component.ts","export class Form {\r\n\r\n   constructor(// public textInputOne: string,\r\n  //             public textInputTwo: string,\r\n              public tradingName: string,\r\n              public registeredCompanyName: string,\r\n              public registrationNumber: string,\r\n              public physicalAddress: string,\r\n              public postalAddress: string,\r\n              public tel: string,\r\n              public faxNo: string,\r\n              public website: string,\r\n              public vatNumber: string,\r\n              public accPersonName: string,\r\n              public accPersonNo: string,\r\n              public accPersonFaxNo: string,\r\n              public accPersonEmail: string,\r\n              public salesPersonName: string,\r\n              public salesPersonNo: string,\r\n              public salesPersonEmail: string,\r\n              public salesPersonFaxNo: string,\r\n              public fileUp?: string,\r\n              public userId?: string,\r\n              public formId?: string) {\r\n\r\n    // this.textInputOne = textInputOne;\r\n    // this.textInputTwo = textInputTwo;\r\n    this.tradingName = tradingName;\r\n    this.registeredCompanyName = registeredCompanyName;\r\n    this.registrationNumber = registrationNumber;\r\n    this.physicalAddress = physicalAddress;\r\n    this.postalAddress = postalAddress;\r\n    this.tel = tel;\r\n    this.faxNo = faxNo;\r\n    this.website = website;\r\n    this.vatNumber = vatNumber;\r\n    this.accPersonName = accPersonName;\r\n    this.accPersonNo = accPersonNo;\r\n    this.accPersonFaxNo = accPersonFaxNo;\r\n    this.accPersonEmail = accPersonEmail;\r\n    this.salesPersonName = salesPersonName;\r\n    this.salesPersonNo = salesPersonNo;\r\n    this.salesPersonEmail = salesPersonEmail;\r\n    this.salesPersonFaxNo = salesPersonFaxNo;\r\n    this.fileUp       = fileUp;\r\n    this.userId       = userId;\r\n    this.formId       = formId;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/form/form.model.ts","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Headers, Response} from '@angular/http';\r\nimport {ErrorService} from '../errorHandler/error.service';\r\nimport {Form} from './form.model';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport {FORMS_API_URL} from '../config/config';\r\nimport {AuthHttp} from 'angular2-jwt';\r\n\r\n@Injectable()\r\nexport class FormService {\r\n\r\n  private token: string  = localStorage.getItem('id_token');\r\n  private userId: string = localStorage.getItem('userId');\r\n  private forms          = [];\r\n  private singleForm     = Object;\r\n  private fetchedForms     = Object;\r\n\r\n  constructor(private authHttp: AuthHttp, private errorService: ErrorService, private toastr: ToastsManager) {\r\n  }\r\n\r\n  // get user forms from backend in order to display them in the front end  WS\r\n  getUserForms() {\r\n    let headers = new Headers({'Content-Type': 'application/json'});\r\n    headers.append('Authorization', this.token);\r\n    return this.authHttp.get(`${FORMS_API_URL}/user/` + this.userId, {headers: headers})\r\n      .timeout(1000)\r\n      .map((response: Response) => {\r\n        const forms      = response.json().forms;\r\n        let fetchedForms = [];\r\n        for (let form of forms) {\r\n          fetchedForms.push(form);\r\n        }\r\n        this.forms = fetchedForms;\r\n        return fetchedForms;\r\n      })\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n\r\n  submitNewForm(newForm) {\r\n    const body    = JSON.stringify(newForm);\r\n    const headers = new Headers({'Content-Type': 'application/json'});\r\n    headers.append('Authorization', this.token);\r\n    return this.authHttp.post(`${FORMS_API_URL}/`, body, {headers: headers})\r\n      .map((response: Response) => response.json())\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n\r\n  editForm(editForm, formId) {\r\n    const body    = JSON.stringify(editForm);\r\n    const headers = new Headers({'Content-Type': 'application/json'});\r\n    headers.append('Authorization', this.token);\r\n    return this.authHttp.patch(`${FORMS_API_URL}/` + formId, body, {headers: headers})\r\n      .map((response: Response) => response.json())\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n\r\n  deleteForm(form: Form) {\r\n    this.forms.splice(this.forms.indexOf(form), 1);\r\n    let headers = new Headers({'Content-Type': 'application/json'});\r\n    headers.append('Authorization', this.token);\r\n    return this.authHttp.delete(`${FORMS_API_URL}/` + form, {headers: headers})\r\n      .map((response: Response) => {\r\n        this.toastr.success('Form deleted successfully!');\r\n        response.json();\r\n      })\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n\r\n  getSingleForm(formId) {\r\n    let headers = new Headers({'Content-Type': 'application/json'});\r\n    headers.append('Authorization', this.token);\r\n    return this.authHttp.get(`${FORMS_API_URL}/` + formId, {headers: headers})\r\n      .map((response: Response) => {\r\n        this.singleForm = response.json();\r\n        return this.singleForm;\r\n      })\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n\r\n  deleteImage(image: string) {\r\n    let headers = new Headers({'Content-Type': 'application/json'});\r\n    headers.append('Authorization', this.token);\r\n    return this.authHttp.delete(`${FORMS_API_URL}/image/` + image, {headers: headers})\r\n      .map((response: Response) => response.json())\r\n      .catch((error: Response) => {\r\n        this.errorService.handleError(error.json());\r\n        return Observable.throw(error.json());\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/form/form.service.ts","export * from './app.component';\r\nexport * from './app.module';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/index.ts","module.exports = \".topPad {\\r\\n  margin-top: 100px !important;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/mainPage/mainPage.component.css\n// module id = ./src/app/mainPage/mainPage.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\r\\n<!--Intro Section-->\\r\\n\\r\\n<section class=\\\"view intro-2 custom-gradient rgba-gradient\\\">\\r\\n    <div class=\\\"full-bg-img\\\">\\r\\n        <div class=\\\"container flex-center\\\">\\r\\n            <div class=\\\"d-flex align-items-center content-height\\\">\\r\\n                <div class=\\\"row flex-center pt-5 mt-3\\\">\\r\\n                    <div class=\\\"col-md-10 text-center text-md-left mb-5\\\">\\r\\n                        <div class=\\\"white-text\\\">\\r\\n                            <h1 class=\\\"h1-responsive font-weight-bold wow fadeInLeft  mb-29\\\" data-wow-delay=\\\"0.3s\\\">Welcome to the Clinix Vendor Application Site</h1>\\r\\n                            <h4 class=\\\"wow fadeInLeft spacing-bottom\\\" data-wow-delay=\\\"0.3s\\\">We want to ensure that we have sufficient appropriately qualified vendors to provide goods and services when required</h4>\\r\\n                            <br>\\r\\n                            <a *ngIf=\\\"!isLoggedIn()\\\" routerLink=\\\"/user/login\\\" class=\\\"spacing-right btn btn-outline-white wow fadeInLeft\\\" data-wow-delay=\\\"0.3s\\\">Login to account <i class=\\\"fa fa-sign-in-alt\\\"></i></a>\\r\\n                            <a *ngIf=\\\"!isLoggedIn()\\\" routerLink=\\\"/user/register\\\" class=\\\"spacing-left btn btn-outline-white wow fadeInLeft\\\" data-wow-delay=\\\"0.3s\\\">Register as a vendor <i class=\\\"fa fa-user-plus\\\"></i></a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/mainPage/mainPage.component.html\n// module id = ./src/app/mainPage/mainPage.component.html\n// module chunks = main","import {Component} from '@angular/core';\r\nimport {AuthService} from '../auth/auth.service';\r\n@Component({\r\n  selector   : 'app-mainpage',\r\n  templateUrl: './mainPage.component.html',\r\n  styleUrls  : ['./mainPage.component.css']\r\n})\r\n\r\nexport class MainPageComponent {\r\n  constructor(private authService: AuthService) {\r\n  }\r\n\r\n  // check if user is logged in by asking the authentication service, we use this function in html file *ngIf directive\r\n  isLoggedIn() {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/mainPage/mainPage.component.ts","module.exports = \".img-resized {\\r\\n    width: 8%;\\r\\n    margin-left: 10px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.css\n// module id = ./src/app/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\r\\n            <img src=\\\"http://clinixmyvoice.co.za/system/uploads/Clinix%20Health%20Academy/images/logo_white.png\\\" alt=\\\"Clinix\\\" class=\\\"logo\\\">\\r\\n        </a>\\r\\n        <div id=\\\"navbar\\\" class=\\\"navbar-collapse\\\">\\r\\n            <ul class=\\\"navbar-nav mr-auto\\\"> &nbsp; </ul>\\r\\n            <ul class=\\\"navbar-right navbar-nav\\\">\\r\\n                <li class=\\\"nav-item text-right\\\"><a class=\\\"nav-link text-orange font-bold\\\" href=\\\"#\\\" (click)=\\\"logout()\\\" *ngIf=\\\"isLoggedIn()\\\">Logout</a></li>\\r\\n                <li class=\\\"nav-item text-right\\\"><i class=\\\"mukam-mobile icon-3x pull-left\\\"></i><a class=\\\"nav-link text-orange font-bold\\\" routerLink=\\\"/user/login\\\">Admin</a></li>\\r\\n            </ul>\\r\\n            <span *ngIf=\\\"isLoggedIn() && !isAdmin()\\\" class=\\\"white-text phone inline\\\"><i class=\\\"mukam-mobile icon-3x pull-left\\\"></i><a class=\\\"nav-link text-orange font-bold\\\" routerLink=\\\"user/forms\\\">Profile</a></span>\\r\\n            <span *ngIf=\\\"isLoggedIn() && isAdmin()\\\" class=\\\"white-text phone inline\\\"><i class=\\\"mukam-mobile icon-3x pull-left\\\"></i><a class=\\\"nav-link text-orange font-bold\\\" routerLink=\\\"/admin\\\">Profile</a></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.html\n// module id = ./src/app/navbar/navbar.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../auth/auth.service';\r\nimport {AdminService} from '../admin/services/admin.service';\r\nimport {ProfileService} from '../user/profile/profile.service';\r\n\r\n@Component({\r\n  selector   : 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls  : ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  // private userId: string = localStorage.getItem('userId');\r\n  // private userId: string;\r\n  fetchedUser: any[] = [];\r\n\r\n  constructor(private authService: AuthService, private adminService: AdminService, private profileService: ProfileService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.authService.isLoggedIn()) {\r\n      let userId = localStorage.getItem('userId');\r\n      this.profileService.getUserDetails(userId)\r\n        .subscribe(\r\n          (data => {\r\n            const userArray = [];\r\n            // tslint:disable-next-line:forin\r\n            for (let key in data) {\r\n              userArray.push(data[key]);\r\n            }\r\n            this.fetchedUser = userArray;\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  // check if user is logged in by asking our authentication service, we use this function in html file *ngIf directive\r\n  isLoggedIn() {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  // this calls the logout function from our authentication service, it's activated when user clicks logout in front end.\r\n  // It's called by the (click)='logout()' when the user presses the button\r\n  logout() {\r\n    return this.authService.logout();\r\n  }\r\n\r\n  isAdmin() {\r\n    return this.adminService.isAdmin();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/navbar/navbar.component.ts","import {RouterModule, Routes} from '@angular/router';\r\nimport {ModuleWithProviders} from '@angular/core';\r\nimport {USER_ROUTES} from './user/user.routes';\r\nimport {ADMIN_ROUTES} from './admin/admin.routes';\r\nimport {UserComponent} from './user/user.component';\r\nimport {FormComponent} from './form/form.component';\r\nimport {AuthGuardService} from './auth/authguard.service';\r\nimport {MainPageComponent} from './mainPage/mainPage.component';\r\nimport {AdminComponent} from './admin/admin.component';\r\nimport {ErrorPageComponent} from './errorPage/errorPage.component';\r\nimport {AdminGuardService} from './admin/services/adminGuard';\r\n\r\nconst APP_ROUTES: Routes = [\r\n  {path: '', component: MainPageComponent, pathMatch: 'full'},\r\n  {path: 'user', component: UserComponent, children: USER_ROUTES},\r\n  {path: 'form', component: FormComponent, canActivate: [AuthGuardService]},\r\n  {path: 'admin', component: AdminComponent, children: ADMIN_ROUTES, canActivate: [AdminGuardService]},\r\n  {path: '404', component: ErrorPageComponent},\r\n  {path: '**', redirectTo: '404'}\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(APP_ROUTES);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/routes.component.ts","module.exports = \"<section class=\\\"view intro-2 custom-gradient rgba-gradient\\\">\\r\\n    <div class=\\\"full-bg-img\\\">\\r\\n        <div class=\\\"container flex-center\\\">\\r\\n            <div class=\\\"d-flex align-items-center content-height\\\">\\r\\n                <div class=\\\"row flex-center pt-5 mt-3\\\">\\r\\n                    <div class=\\\"col-md-10 text-center text-md-left mb-5\\\">\\r\\n                        <div class=\\\"white-text\\\">\\r\\n                            <h1 class=\\\"h1-responsive font-weight-bold wow fadeInLeft  mb-29\\\" data-wow-delay=\\\"0.3s\\\">Welcome to the Clinix Vendor Application Site</h1>\\r\\n                            <h4 class=\\\"wow fadeInLeft spacing-bottom\\\" data-wow-delay=\\\"0.3s\\\">We want to ensure that we have sufficient appropriately qualified vendors to provide goods and services when required</h4>\\r\\n                            <br>\\r\\n                            <!-- <a appModal modal-open=\\\"login\\\" *ngIf=\\\"!isLoggedIn()\\\" routerLink=\\\"/user/login\\\" class=\\\"btn btn-outline-white wow fadeInLeft\\\" data-wow-delay=\\\"0.3s\\\">Login to account <i class=\\\"fa fa-sign-in-alt\\\"></i></a>\\r\\n                          <a appModal modal-open=\\\"register\\\" *ngIf=\\\"!isLoggedIn()\\\" routerLink=\\\"/user/register\\\" class=\\\"btn btn-outline-white wow fadeInLeft\\\" data-wow-delay=\\\"0.3s\\\">Register as a vendor <i class=\\\"fa fa-user-plus\\\"></i></a> -->\\r\\n                            <button class=\\\"btn btn-outline-white wow fadeInLeft spacing-right\\\" data-wow-delay=\\\"0.3s\\\">Login to account <i class=\\\"fa fa-sign-in-alt\\\"></i></button>\\r\\n                            <button class=\\\"btn btn-outline-white wow fadeInLeft spacing-left\\\" data-wow-delay=\\\"0.3s\\\">Register as a vendor <i class=\\\"fa fa-user-plus\\\"></i></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n<section class=\\\"modal display-block\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <a routerLink=\\\"/\\\" class=\\\"close-text text-right\\\">Close</a>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"card card-transparent\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <!--Header-->\\r\\n                        <div class=\\\"text-header\\\">\\r\\n                            <h4 class=\\\"white-text\\\"><i class=\\\"fa fa-user white-text\\\"></i> Forgot Password:</h4>\\r\\n                        </div>\\r\\n                        <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"login-form form\\\" novalidate>\\r\\n                            <h5 class=\\\"text-center white-text\\\">Please fill in your email and we will send you an email containing password reset instructions.</h5>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <span class=\\\"input-group-addon\\\"><span class=\\\"glyphicon glyphicon-envelope\\\"></span></span>\\r\\n                                <input #userEmail type=\\\"text\\\" formControlName=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\" autofocus autocapitalize=\\\"none\\\" autocomplete=\\\"off\\\" spellcheck=\\\"false\\\" autocorrect=\\\"none\\\">\\r\\n                            </div>\\r\\n                            <div [hidden]=\\\"email.valid || email.pristine\\\" class=\\\"alert alert-danger\\\">Please enter a valid email</div>\\r\\n                            <span class=\\\"help-block\\\"></span>\\r\\n                            <button class=\\\"btn btn-lg btn-primary btn-block margin-top\\\" type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\">Submit</button>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/accountRecover/forgetPassword.component.html\n// module id = ./src/app/user/accountRecover/forgetPassword.component.html\n// module chunks = main","import {Component, OnInit, ViewChild, ElementRef, Renderer, AfterViewInit} from '@angular/core';\r\nimport {FormGroup, FormControl, FormBuilder, Validators} from '@angular/forms';\r\nimport {AuthService} from '../../auth/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport {Reset} from '../../auth/password.model';\r\nimport {ToastsManager} from 'ng2-toastr';\r\n\r\n@Component({\r\n  selector   : 'app-forget-password',\r\n  templateUrl: './forgetPassword.component.html',\r\n  styleUrls  : ['./resetPagesStyle.scss']\r\n})\r\n\r\nexport class ForgetPasswordComponent implements OnInit, AfterViewInit {\r\n  myForm: FormGroup;\r\n  email: FormControl;\r\n  @ViewChild('userEmail') userEmail: ElementRef;\r\n\r\n  constructor(private fb: FormBuilder, private authService: AuthService,\r\n              private router: Router, private toastr: ToastsManager, private renderer: Renderer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.email = new FormControl('', [Validators.required, this.emailValidator]);\r\n\r\n    this.myForm = this.fb.group({\r\n      email: this.email\r\n    });\r\n\r\n    if (this.authService.isLoggedIn()) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.renderer.invokeElementMethod(this.userEmail.nativeElement, 'focus', []);\r\n    }, 50);\r\n  }\r\n\r\n  onSubmit() {\r\n    const email = new Reset(this.myForm.value.email, null, null);\r\n    this.authService.forget(email)\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate(['/']);\r\n          this.toastr.success('An email has been sent with password reset instructions');\r\n        },\r\n        error => console.log(error)\r\n      );\r\n\r\n  }\r\n\r\n  emailValidator(control) {\r\n    let EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\r\n\r\n    if (!EMAIL_REGEXP.test(control.value)) {\r\n      return {invalidEmail: true};\r\n    }\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/accountRecover/forgetPassword.component.ts","module.exports = \".topPad {\\n  margin-top: 150px; }\\n\\n.form-control:focus {\\n  background-color: transparent !important; }\\n\\n.form-control {\\n  color: #fff; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/accountRecover/resetPagesStyle.scss\n// module id = ./src/app/user/accountRecover/resetPagesStyle.scss\n// module chunks = main","module.exports = \"<section class=\\\"view intro-2 custom-gradient rgba-gradient\\\">\\r\\n    <div class=\\\"full-bg-img\\\">\\r\\n        <div class=\\\"container flex-center\\\">\\r\\n            <div class=\\\"d-flex align-items-center content-height\\\">\\r\\n                <div class=\\\"row flex-center pt-5 mt-3\\\">\\r\\n                    <div class=\\\"col-md-10 text-center text-md-left mb-5\\\">\\r\\n                        <div class=\\\"white-text\\\">\\r\\n                            <h1 class=\\\"h1-responsive font-weight-bold wow fadeInLeft  mb-29\\\" data-wow-delay=\\\"0.3s\\\">Welcome to the Clinix Vendor Application Site</h1>\\r\\n                            <h4 class=\\\"wow fadeInLeft spacing-bottom\\\" data-wow-delay=\\\"0.3s\\\">We want to ensure that we have sufficient appropriately qualified vendors to provide goods and services when required</h4>\\r\\n                            <br>\\r\\n                            <!-- <a appModal modal-open=\\\"login\\\" *ngIf=\\\"!isLoggedIn()\\\" routerLink=\\\"/user/login\\\" class=\\\"btn btn-outline-white wow fadeInLeft\\\" data-wow-delay=\\\"0.3s\\\">Login to account <i class=\\\"fa fa-sign-in-alt\\\"></i></a>\\r\\n                            <a appModal modal-open=\\\"register\\\" *ngIf=\\\"!isLoggedIn()\\\" routerLink=\\\"/user/register\\\" class=\\\"btn btn-outline-white wow fadeInLeft\\\" data-wow-delay=\\\"0.3s\\\">Register as a vendor <i class=\\\"fa fa-user-plus\\\"></i></a> -->\\r\\n                            <button class=\\\"btn btn-outline-white wow fadeInLeft spacing-right\\\" data-wow-delay=\\\"0.3s\\\">Login to account <i class=\\\"fa fa-sign-in-alt\\\"></i></button>\\r\\n                            <button class=\\\"btn btn-outline-white wow fadeInLeft spacing-left\\\" data-wow-delay=\\\"0.3s\\\">Register as a vendor <i class=\\\"fa fa-user-plus\\\"></i></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"modal display-block\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <a routerLink=\\\"/\\\" class=\\\"close-text text-right\\\">Close</a>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"card card-transparent\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <!--Header-->\\r\\n                        <div class=\\\"text-header\\\">\\r\\n                            <h4 class=\\\"white-text\\\"><i class=\\\"fa fa-user white-text\\\"></i> Reset Password:</h4>\\r\\n                        </div>\\r\\n                        <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"login-form form\\\" novalidate>\\r\\n                            <h5 #newPassword class=\\\"text-center white-text\\\">Please enter a new password and press submit.</h5>\\r\\n                            <span class=\\\"help-block\\\"></span>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <span class=\\\"input-group-addon\\\"><span class=\\\"glyphicon glyphicon-lock\\\"></span></span>\\r\\n                                <input type=\\\"password\\\" formControlName=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control white-text\\\">\\r\\n                            </div>\\r\\n                            <div [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"alert alert-danger\\\">Password must contain at least 6 characters</div>\\r\\n                            <br>\\r\\n                            <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\">Submit</button>\\r\\n                        </form>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/accountRecover/resetPassword.component.html\n// module id = ./src/app/user/accountRecover/resetPassword.component.html\n// module chunks = main","import {AfterViewInit, Component, ElementRef, OnInit, Renderer, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {AuthService} from '../../auth/auth.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Reset} from '../../auth/password.model';\r\nimport {ToastsManager} from 'ng2-toastr';\r\n\r\n@Component({\r\n  selector   : 'app-reset-password',\r\n  templateUrl: './resetPassword.component.html',\r\n  styleUrls  : ['./resetPagesStyle.scss']\r\n})\r\n\r\nexport class ResetPasswordComponent implements OnInit, AfterViewInit {\r\n\r\n  myForm: FormGroup;\r\n  password: FormControl;\r\n  token: string;\r\n  @ViewChild('newPassword') newPassword: ElementRef;\r\n\r\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router,\r\n              private activatedRoute: ActivatedRoute, private toastr: ToastsManager, private renderer: Renderer) {\r\n    this.token = activatedRoute.snapshot.params['token'];\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.password = new FormControl('', [Validators.required, Validators.minLength(6)]);\r\n\r\n    this.myForm = this.fb.group({\r\n      password: this.password\r\n    });\r\n\r\n    if (this.authService.isLoggedIn()) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.renderer.invokeElementMethod(this.newPassword.nativeElement, 'focus', []);\r\n    }, 50);\r\n  }\r\n\r\n  onSubmit() {\r\n    const password = new Reset(null, this.token, this.myForm.value.password);\r\n    this.authService.reset(password)\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate(['/user/login']);\r\n          this.toastr.success('Your password has been changed succesfully');\r\n        },\r\n        error => console.log(error)\r\n      );\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/accountRecover/resetPassword.component.ts","module.exports = \"<section class=\\\"view intro-2 custom-gradient rgba-gradient\\\">\\r\\n    <div class=\\\"full-bg-img\\\">\\r\\n        <div class=\\\"container flex-center\\\">\\r\\n            <div class=\\\"d-flex align-items-center content-height\\\">\\r\\n                <div class=\\\"row flex-center pt-5 mt-3\\\">\\r\\n                    <div class=\\\"col-md-10 text-center text-md-left mb-5\\\">\\r\\n                        <div class=\\\"white-text\\\">\\r\\n                            <h1 class=\\\"h1-responsive font-weight-bold wow fadeInLeft  mb-29\\\" data-wow-delay=\\\"0.3s\\\">Welcome to the Clinix Vendor Application Site</h1>\\r\\n                            <h4 class=\\\"wow fadeInLeft spacing-bottom\\\" data-wow-delay=\\\"0.3s\\\">We want to ensure that we have sufficient appropriately qualified vendors to provide goods and services when required</h4>\\r\\n                            <br>\\r\\n                            <!-- <a appModal modal-open=\\\"login\\\" *ngIf=\\\"!isLoggedIn()\\\" routerLink=\\\"/user/login\\\" class=\\\"btn btn-outline-white wow fadeInLeft\\\" data-wow-delay=\\\"0.3s\\\">Login to account <i class=\\\"fa fa-sign-in-alt\\\"></i></a>\\r\\n                            <a appModal modal-open=\\\"register\\\" *ngIf=\\\"!isLoggedIn()\\\" routerLink=\\\"/user/register\\\" class=\\\"btn btn-outline-white wow fadeInLeft\\\" data-wow-delay=\\\"0.3s\\\">Register as a vendor <i class=\\\"fa fa-user-plus\\\"></i></a> -->\\r\\n                            <button class=\\\"btn btn-outline-white wow fadeInLeft spacing-right\\\" data-wow-delay=\\\"0.3s\\\">Login to account <i class=\\\"fa fa-sign-in-alt\\\"></i></button>\\r\\n                            <button class=\\\"btn btn-outline-white wow fadeInLeft spacing-left\\\" data-wow-delay=\\\"0.3s\\\">Register as a vendor <i class=\\\"fa fa-user-plus\\\"></i></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"modal display-block\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <a routerLink=\\\"/\\\" class=\\\"close-text text-right\\\">Close</a>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"card card-transparent\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <!--Header-->\\r\\n                        <div class=\\\"text-header\\\">\\r\\n                            <h4 class=\\\"white-text\\\"><i class=\\\"fa fa-user white-text\\\"></i> Login:</h4>\\r\\n                        </div>\\r\\n                        <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"clearfix pad-top-10\\\" novalidate autocomplete=\\\"off\\\">\\r\\n                            <!--Body-->\\r\\n                            <div class=\\\"md-form \\\">\\r\\n                                <i class=\\\"fa fa-envelope prefix white-text\\\"></i>\\r\\n                                <input #userEmail type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\r\\n                                <label for=\\\"userEmail\\\">Email</label>\\r\\n                                <span [hidden]=\\\"email.valid || email.pristine\\\" class=\\\"help-block text-danger\\\">Please enter a valid email format</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-form\\\">\\r\\n                                <i class=\\\"fa fa-key prefix white-text\\\"></i>\\r\\n                                <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\r\\n                                <label for=\\\"password\\\">Password</label>\\r\\n                                <span [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"help-block text-danger\\\">Password must contain 6 or more characters</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button [disabled]=\\\"!myForm.valid\\\" class=\\\"btn btn-deep-orange btn-block waves-effect waves-light\\\" type=\\\"submit\\\">\\r\\n                                        <span *ngIf=\\\"!loading\\\">Login <i class=\\\"fa fa-sign-in-alt\\\"></i></span>\\r\\n                                        <span *ngIf=\\\"loading\\\">\\r\\n                                        <app-loader></app-loader>\\r\\n                                        </span>\\r\\n                                      </button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                    <!--Footer-->\\r\\n                    <div class=\\\"modal-footer\\\">\\r\\n                        <div class=\\\"options\\\">\\r\\n                            <span class=\\\"white-text pull-right display-block text-right\\\">Not a member? <a routerLink=\\\"/user/register\\\" class=\\\"deep-orange-text\\\">Sign Up</a></span>\\r\\n                            <span class=\\\"white-text pull-right display-block text-right\\\">Lost password? <a class=\\\"deep-orange-text\\\" [routerLink]=\\\"'/user/reset'\\\">Reset here</a></span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/login/login.component.html\n// module id = ./src/app/user/login/login.component.html\n// module chunks = main","module.exports = \".md-form input[type=date],\\n.md-form input[type=datetime-local],\\n.md-form input[type=email],\\n.md-form input[type=number],\\n.md-form input[type=password],\\n.md-form input[type=search-md],\\n.md-form input[type=search],\\n.md-form input[type=tel],\\n.md-form input[type=text],\\n.md-form input[type=time],\\n.md-form input[type=url],\\n.md-form textarea.md-textarea {\\n  -webkit-transition: all .3s;\\n  transition: all .3s;\\n  outline: 0;\\n  -webkit-box-shadow: none;\\n          box-shadow: none;\\n  border: none;\\n  border-bottom: 1px solid #ced4da;\\n  border-radius: 0;\\n  -webkit-box-sizing: content-box;\\n          box-sizing: content-box;\\n  background-color: transparent; }\\n\\n.form-control {\\n  color: #fff; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/login/login.component.scss\n// module id = ./src/app/user/login/login.component.scss\n// module chunks = main","import {Component, OnInit, ViewChild, ElementRef, Renderer, AfterViewInit} from '@angular/core';\r\nimport {FormGroup, FormControl, FormBuilder, Validators} from '@angular/forms';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../../auth/auth.service';\r\nimport {User} from '../../auth/user.model';\r\nimport { emailValidator } from '../../validators/input-match';\r\nimport {AdminService} from '../../admin/services/admin.service';\r\n@Component({\r\n  selector   : 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls  : ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n  loading: boolean;\r\n  myForm: FormGroup;\r\n  email: FormControl;\r\n  userId: string;\r\n  password: FormControl;\r\n  @ViewChild('userEmail') userEmail: ElementRef;\r\n\r\n  constructor(private fb: FormBuilder, private authService: AuthService,\r\n              private router: Router, private toastr: ToastsManager, private adminService: AdminService, private renderer: Renderer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading = false;\r\n    this.email    = new FormControl('', [Validators.required, emailValidator]);\r\n    this.password = new FormControl('', [Validators.required, Validators.minLength(6)]);\r\n\r\n    this.myForm = this.fb.group({\r\n      email   : this.email,\r\n      password: this.password\r\n    });\r\n\r\n    // check if the user is logged in while trying to access the login page, if the user is logged in, we redirect him to the form page\r\n    if (this.authService.isLoggedIn()) {\r\n      this.toastr.info('You are already logged in');\r\n      this.router.navigate(['/user/forms']);\r\n    }\r\n    // check if the user has a form and redirect him to the form\r\n    /**\r\n     * ToDo\r\n     * Add method to redirect to edit form if it exits\r\n     */\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.renderer.invokeElementMethod(this.userEmail.nativeElement, 'focus', []);\r\n    }, 50);\r\n  }\r\n\r\n  // submit the login form with the user credentials and navigate the user to the index page of our app\r\n  onSubmit() {\r\n    this.loading = true;\r\n    const user = new User(this.myForm.value.email, this.myForm.value.password);\r\n    this.authService.signin(user)\r\n      .subscribe(\r\n        data => {\r\n          // if the user credentials are correct, set the localStorage token and userId,\r\n          // we need these info in order to do stuff later when the user is signed in and verified\r\n          localStorage.setItem('id_token', data.token);\r\n          localStorage.setItem('userId', data.user._id);\r\n          localStorage.setItem('email', data.user.email);\r\n          localStorage.setItem('role', data.user.role[0]);\r\n          // navigate user to index page of our app\r\n          if (this.adminService.isAdmin()) {\r\n              this.router.navigate(['admin']);\r\n          } else {\r\n            this.router.navigate(['/user/forms']);\r\n          }\r\n          // display toastr success message pop up to inform the user that he logged in successfully\r\n          this.toastr.success('You have been logged in!');\r\n        },\r\n        error => console.log(error)\r\n      );\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/login/login.component.ts","module.exports = \"<div class=\\\"container topPad\\\">\\r\\n  <form [formGroup]=\\\"resetPasswordForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"register-form form\\\" novalidate>\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <span class=\\\"input-group-addon\\\"><span class=\\\"glyphicon glyphicon-lock\\\"></span></span>\\r\\n      <input #userPassword type=\\\"password\\\" formControlName=\\\"currentPassword\\\" placeholder=\\\"Current Password\\\" class=\\\"form-control\\\">\\r\\n    </div>\\r\\n    <div [hidden]=\\\"currentPassword.valid || currentPassword.pristine\\\" class=\\\"alert alert-danger\\\">Password must contain 6 or more characters</div>\\r\\n    <span class=\\\"help-block\\\"></span>\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <span class=\\\"input-group-addon\\\"><span class=\\\"glyphicon glyphicon-lock\\\"></span></span>\\r\\n      <input type=\\\"password\\\" formControlName=\\\"newPassword\\\" placeholder=\\\"New Password\\\" class=\\\"form-control\\\">\\r\\n    </div>\\r\\n    <div [hidden]=\\\"newPassword.valid || newPassword.pristine\\\" class=\\\"alert alert-danger\\\">Password must contain 6 or more characters</div>\\r\\n    <br>\\r\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!resetPasswordForm.valid\\\">Change Password</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/profile/changePassword/changePassword.component.html\n// module id = ./src/app/user/profile/changePassword/changePassword.component.html\n// module chunks = main","import {Component, OnInit, ViewChild, ElementRef, Renderer, AfterViewInit} from '@angular/core';\r\nimport {FormGroup, FormControl, FormBuilder, Validators} from '@angular/forms';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport {Router} from '@angular/router';\r\nimport {newPassword} from '../userProfile.model';\r\nimport {ProfileService} from '../profile.service';\r\n\r\n@Component({\r\n  selector   : 'app-change-password',\r\n  templateUrl: './changePassword.component.html'\r\n})\r\nexport class ChangePasswordComponent implements OnInit, AfterViewInit {\r\n\r\n  resetPasswordForm: FormGroup;\r\n  currentPassword: FormControl;\r\n  newPassword: FormControl;\r\n  @ViewChild('userPassword') userPassword: ElementRef;\r\n\r\n  constructor(private fb: FormBuilder, private profileService: ProfileService,\r\n              private router: Router, private toastr: ToastsManager, private renderer: Renderer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentPassword = new FormControl('', [Validators.required, Validators.minLength(6)]);\r\n    this.newPassword     = new FormControl('', [Validators.required, Validators.minLength(6)]);\r\n\r\n    this.resetPasswordForm = this.fb.group({\r\n      currentPassword: this.currentPassword,\r\n      newPassword    : this.newPassword\r\n    });\r\n  }\r\n\r\n  // focus on 'current password' input box after content is initialized\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.renderer.invokeElementMethod(this.userPassword.nativeElement, 'focus', []);\r\n    }, 50);\r\n  }\r\n\r\n  // submit the password change form to the backend with the new desired credentials\r\n  onSubmit() {\r\n    const newPass = new newPassword(this.resetPasswordForm.value.currentPassword, this.resetPasswordForm.value.newPassword);\r\n    this.profileService.newPassword(newPass)\r\n      .subscribe(\r\n        data => {\r\n          // after successfull registration, the user is redirected to the login page\r\n          this.router.navigate(['/user/login']);\r\n          localStorage.removeItem('id_token');\r\n          // toastr message pops up to inform user that the registration was successfull\r\n          this.toastr.success('Please login with your new password', 'Password changed');\r\n        }\r\n      );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/profile/changePassword/changePassword.component.ts","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Headers, Response} from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport {ErrorService} from '../../errorHandler/error.service';\r\nimport {newPassword} from './userProfile.model';\r\nimport {AuthService} from '../../auth/auth.service';\r\nimport {AuthHttp} from 'angular2-jwt';\r\nimport {USER_API_URL} from '../../config/config';\r\n\r\n@Injectable()\r\nexport class ProfileService {\r\n\r\n  constructor(private http: AuthHttp, private errorService: ErrorService, private authService: AuthService) {\r\n  }\r\n\r\n  // get user details from database to display them in front end profile page\r\n  getUserDetails(userId) {\r\n    if (this.authService.isLoggedIn()) {\r\n      let token   = localStorage.getItem('id_token');\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      let userId  = localStorage.getItem('userId');\r\n      let headers = new Headers({'Content-Type': 'application/json'});\r\n      headers.append('Authorization', token);\r\n      return this.http.get(`${USER_API_URL}/` + userId, {headers: headers})\r\n        .map((response: Response) => response.json())\r\n        .catch((error: Response) => {\r\n          this.errorService.handleError(error.json());\r\n          return Observable.throw(error.json());\r\n        });\r\n    }\r\n  }\r\n\r\n  // submit the new password via the form in front end\r\n  newPassword(newPass: newPassword) {\r\n    if (this.authService.isLoggedIn()) {\r\n      let token     = localStorage.getItem('id_token');\r\n      const body    = JSON.stringify(newPass);\r\n      const headers = new Headers({'Content-Type': 'application/json'});\r\n      headers.append('Authorization', token);\r\n      return this.http.post(`${USER_API_URL}/password`, body, {headers: headers})\r\n        .map((response: Response) => response.json())\r\n        .catch((error: Response) => {\r\n          this.errorService.handleError((error.json()));\r\n          return Observable.throw(error.json());\r\n        });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/profile/profile.service.ts","module.exports = \".img-resized {\\r\\n  width: 80%;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/profile/userProfile.component.css\n// module id = ./src/app/user/profile/userProfile.component.css\n// module chunks = main","module.exports = \"<!-- <div class=\\\"container pad-top-header\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\\r\\n            <div *ngFor=\\\"let user of fetchedUser\\\" class=\\\"text-center\\\">\\r\\n    \\r\\n                <form>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"profilePictureTempEdit\\\">\\r\\n                            <button *ngIf=\\\"submitStarted\\\" class=\\\"disabled btn-no-hover btn btn-default centered progress-button\\\">\\r\\n                <i class=\\\"fa fa-circle-o-notch fa-spin fa-fw\\\"></i> Please wait... <span class=\\\"progress-percent\\\">{{progress}}%</span>\\r\\n              </button>\\r\\n                            <div class=\\\"text-center top-margin\\\">\\r\\n                                <div class=\\\"profilePictureTempEdit\\\" *ngIf=\\\"oldImage && !imageReady\\\">\\r\\n                                    <img *ngIf=\\\"user.profilePic; else noImage\\\" class=\\\"img-resized  img-thumbnail\\\" src=\\\"./uploads/profiles/{{user._id}}/{{user.profilePic}}\\\" alt=\\\"image\\\" onerror=\\\"this.src ='assets/images/no-image.jpg';\\\">\\r\\n                                    <ng-template #noImage><img src=\\\"./assets/images/profile-placeholder.png\\\" class=\\\"img-resized  img-thumbnail\\\"></ng-template>\\r\\n                                    <div class=\\\"upload-button\\\" *ngIf=\\\"!imageReady\\\">\\r\\n                                        <input type=\\\"file\\\" name=\\\"file-1\\\" id=\\\"file-1\\\" class=\\\"inputfile4 inputfile-4\\\" (change)=\\\"onFileSelect($event)\\\">\\r\\n                                        <label for=\\\"file-1\\\">\\r\\n                <span>\\r\\n                </span>\\r\\n                    </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"profilePictureTempEdit\\\">\\r\\n                                    <img *ngIf=\\\"imageReady\\\" #image class=\\\"img-responsive\\\" src=\\\"{{imageUrl}}{{imagePath}}\\\" alt=\\\"image\\\" onerror=\\\"this.src ='assets/images/no-image.jpg';\\\" />\\r\\n                                    <div class=\\\"upload-button\\\">\\r\\n                                        <input type=\\\"file\\\" name=\\\"file-2\\\" id=\\\"file-2\\\" class=\\\"inputfile4 inputfile-4\\\" (change)=\\\"onFileSelect($event)\\\">\\r\\n                                        <label for=\\\"file-2\\\">\\r\\n                  <span>\\r\\n                  </span>\\r\\n                    </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-8 col-sm-6 col-xs-12 personal-info\\\">\\r\\n            <h3>Personal info</h3>\\r\\n            <form *ngFor=\\\"let user of fetchedUser\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-lg-3 control-label\\\">User ID:</label>\\r\\n                    <div class=\\\"col-lg-8\\\">\\r\\n                        <p class=\\\"form-control-static\\\">{{user._id}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-lg-3 control-label\\\">Email:</label>\\r\\n                    <div class=\\\"col-lg-8\\\">\\r\\n                        <p class=\\\"form-control-static\\\">{{user.email}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-lg-3 control-label\\\">Joined at:</label>\\r\\n                    <div class=\\\"col-lg-8\\\">\\r\\n                        <p class=\\\"form-control-static\\\">{{user.createdAt | date: 'medium'}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-lg-3 control-label\\\">Your role:</label>\\r\\n                    <div class=\\\"col-lg-8\\\">\\r\\n                        <p class=\\\"form-control-static\\\">{{user.role}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-md-3 control-label\\\"></label>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['password']\\\" type=\\\"button\\\">Change Password</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div> -->\\r\\n\\r\\n<div class=\\\"card card-profile\\\">\\r\\n    <div class=\\\"card-avatar\\\">\\r\\n        <a>\\r\\n            <img class=\\\"img\\\" src=\\\"../assets/images/vendor_profile.png\\\" alt=\\\"image\\\">\\r\\n        </a>\\r\\n    </div>\\r\\n    <div class=\\\"content\\\" *ngFor=\\\"let user of fetchedUser\\\">\\r\\n        <h6 class=\\\"category text-gray\\\"></h6>\\r\\n        <h4 class=\\\"card-title\\\">Tempest Hodings</h4>\\r\\n        <h4 class=\\\"card-title\\\"></h4>\\r\\n        <p class=\\\"card-content\\\">\\r\\n            <b class=\\\"\\\">Email </b> <br/>{{user.email}} <br/>\\r\\n            <b class=\\\"text-bold spacing-top display-block\\\">Telephone</b> 073 408 4441<br/>\\r\\n            <b class=\\\"text-bold spacing-top display-block\\\">Status</b> Waiting approval\\r\\n        </p>\\r\\n\\r\\n        <a routerLink (click)=\\\"logout()\\\" class=\\\"btn btn-orange btn-round btn-sm spacing-bottom\\\">Logout</a>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/profile/userProfile.component.html\n// module id = ./src/app/user/profile/userProfile.component.html\n// module chunks = main","import {Component, ElementRef, EventEmitter, OnInit, ViewChild} from '@angular/core';\r\nimport {ProfileService} from './profile.service';\r\nimport {UserProfile} from './userProfile.model';\r\nimport {Router} from '@angular/router';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport {BASE_URL, USER_API_URL} from '../../config/config';\r\nimport { AuthService } from '../../auth/auth.service';\r\n\r\n@Component({\r\n  selector   : 'app-userprofile',\r\n  templateUrl: './userProfile.component.html',\r\n  styleUrls  : ['./userProfile.component.css']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n  private userId: string = localStorage.getItem('userId');\r\n  private token: string = localStorage.getItem('id_token');\r\n  url   = `${USER_API_URL}/image`;\r\n  imageUrl   = `${BASE_URL}/uploads/tmp/`;\r\n  user: UserProfile;\r\n  fetchedUser: any[]   = [];\r\n  maxSize  = 5000000;\r\n  invalidFileSizeMessage = '{0}: Invalid file size, ';\r\n  invalidFileSizeMessageDetail = 'Maximum upload size is {0}.';\r\n  onClear: EventEmitter<any> = new EventEmitter();\r\n  public files: File[];\r\n  public progress  = 0;\r\n  public submitStarted: boolean;\r\n  imagePath: string;\r\n  imageReady = false;\r\n  oldImage   = true;\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n  @ViewChild('profileImage') profileImage: ElementRef;\r\n\r\n  constructor(private profileService: ProfileService,\r\n              private router: Router,\r\n              private toastr: ToastsManager,\r\n              private authService: AuthService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.files = [];\r\n    this.profileService.getUserDetails(this.userId)\r\n      .subscribe(\r\n        (data => {\r\n          const userArray = [];\r\n          // tslint:disable-next-line:forin\r\n          for (let key in data) {\r\n            userArray.push(data[key]);\r\n          }\r\n          this.fetchedUser = userArray;\r\n        })\r\n      );\r\n  }\r\n\r\n  onFileSelect(event) {\r\n    this.clear();\r\n    this.submitStarted = true;\r\n    let files          = event.dataTransfer ? event.dataTransfer.files : event.target.files;\r\n    for (let i = 0; i < files.length; i++) {\r\n      let file = files[i];\r\n      if (this.validate(file)) {\r\n        if (this.isFile(file)) {\r\n          this.files.push(files[i]);\r\n          let xhr      = new XMLHttpRequest();\r\n          let formData = new FormData();\r\n          for (let i = 0; i < this.files.length; i++) {\r\n            formData.append('fileUp', this.files[i], this.files[i].name);\r\n          }\r\n\r\n          xhr.onreadystatechange = () => {\r\n            if (xhr.readyState === 4) {\r\n              this.progress = 0;\r\n              if (xhr.status === 201) {\r\n                this.imagePath     = xhr.response.replace(/^\"|\"$/g, '');\r\n                this.imageReady    = true;\r\n                this.oldImage      = false;\r\n                this.submitStarted = false;\r\n              } else if (xhr.status !== 201) {\r\n                this.toastr.error('There was an error, please try again later');\r\n                this.submitStarted = false;\r\n                this.oldImage      = true;\r\n                this.clear();\r\n              }\r\n              this.clear();\r\n            }\r\n          };\r\n\r\n          xhr.upload.addEventListener('progress', (e: ProgressEvent) => {\r\n            if (e.lengthComputable) {\r\n              this.progress = Math.round((e.loaded * 100) / e.total);\r\n            }\r\n          }, false);\r\n\r\n          xhr.open('POST', this.url, true);\r\n          xhr.setRequestHeader('Authorization', 'JWT ' + this.token);\r\n          xhr.send(formData);\r\n          console.log(formData);\r\n        }\r\n      } else if (!this.isFile(file)) {\r\n        this.toastr.error('Only pdf, doc, jpep and png are allowed');\r\n        this.clear();\r\n      }\r\n    }\r\n  }\r\n\r\n  // check if the image is actually an image by checking the mime type\r\n  isFile(file: File): boolean {\r\n    if (!file.type.match(/.jpeg|.jpg|.png|.doc|.docx|.gif/gi)) {\r\n      this.toastr.error('Only pdf, doc, jpep and png are allowed');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // check if the form has files ready to be uploaded\r\n  hasFiles(): boolean {\r\n    return this.files && this.files.length > 0;\r\n  }\r\n\r\n  // clears the form\r\n  clear() {\r\n    this.files = [];\r\n    this.onClear.emit();\r\n  }\r\n\r\n  // remove the image from the preview\r\n  remove(index: number) {\r\n    this.files.splice(index, 1);\r\n    this.fileInput.nativeElement.value = '';\r\n  }\r\n\r\n  // check the image file size\r\n  validate(file: File): boolean {\r\n    if (this.maxSize && file.size > this.maxSize) {\r\n      this.toastr.error(this.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.maxSize)),\r\n        this.invalidFileSizeMessage.replace('{0}', file.name));\r\n      this.submitStarted = false;\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n// format the size to display it in toastr in case the user uploaded a file bigger than 5MB\r\n  formatSize(bytes) {\r\n    if (bytes === 0) {\r\n      return '0 B';\r\n    }\r\n    let k     = 1000,\r\n        dm    = 3,\r\n        sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n        i     = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n  logout() {\r\n    return this.authService.logout();\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/profile/userProfile.component.ts","export class UserProfile {\r\n  constructor(public email: string,\r\n              public role: Array<any>,\r\n              public createdAt: string,\r\n              public updatedAt: string,\r\n              public id: string,\r\n              public profilePic: string) {\r\n  }\r\n}\r\n\r\n\r\n// tslint:disable-next-line:class-name\r\nexport class newPassword {\r\n  constructor(public currentPassword: string, public newPassword: string) {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/profile/userProfile.model.ts","module.exports = \".topPad {\\r\\n  margin-top: 150px;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/register/register.component.css\n// module id = ./src/app/user/register/register.component.css\n// module chunks = main","module.exports = \"<section class=\\\"view intro-2 custom-gradient rgba-gradient\\\">\\r\\n    <div class=\\\"full-bg-img\\\">\\r\\n        <div class=\\\"container flex-center\\\">\\r\\n            <div class=\\\"d-flex align-items-center content-height\\\">\\r\\n                <div class=\\\"row flex-center pt-5 mt-3\\\">\\r\\n                    <div class=\\\"col-md-10 text-center text-md-left mb-5\\\">\\r\\n                        <div class=\\\"white-text\\\">\\r\\n                            <h1 class=\\\"h1-responsive font-weight-bold wow fadeInLeft  mb-29\\\" data-wow-delay=\\\"0.3s\\\">Welcome to the Clinix Vendor Application Site</h1>\\r\\n                            <h4 class=\\\"wow fadeInLeft spacing-bottom\\\" data-wow-delay=\\\"0.3s\\\">We want to ensure that we have sufficient appropriately qualified vendors to provide goods and services when required</h4>\\r\\n                            <br>\\r\\n                            <!-- <a appModal modal-open=\\\"login\\\" *ngIf=\\\"!isLoggedIn()\\\" routerLink=\\\"/user/login\\\" class=\\\"btn btn-outline-white wow fadeInLeft\\\" data-wow-delay=\\\"0.3s\\\">Login to account <i class=\\\"fa fa-sign-in-alt\\\"></i></a>\\r\\n                                <a appModal modal-open=\\\"register\\\" *ngIf=\\\"!isLoggedIn()\\\" routerLink=\\\"/user/register\\\" class=\\\"btn btn-outline-white wow fadeInLeft\\\" data-wow-delay=\\\"0.3s\\\">Register as a vendor <i class=\\\"fa fa-user-plus\\\"></i></a> -->\\r\\n                            <button class=\\\"btn btn-outline-white wow fadeInLeft spacing-right\\\" data-wow-delay=\\\"0.3s\\\">Login to account <i class=\\\"fa fa-sign-in-alt\\\"></i></button>\\r\\n                            <button class=\\\"btn btn-outline-white wow fadeInLeft spacing-left\\\" data-wow-delay=\\\"0.3s\\\">Register as a vendor <i class=\\\"fa fa-user-plus\\\"></i></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"modal display-block\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <a routerLink=\\\"/\\\" class=\\\"close-text text-right\\\">Close</a>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"card card-transparent\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <!--Header-->\\r\\n                        <div class=\\\"text-header\\\">\\r\\n                            <h4 class=\\\"white-text\\\"><i class=\\\"fa fa-user-plus white-text\\\"></i> Register:</h4>\\r\\n                        </div>\\r\\n                        <!--Body-->\\r\\n                        <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n                            <div class=\\\"md-form \\\">\\r\\n                                <i class=\\\"fa fa-envelope prefix white-text\\\"></i>\\r\\n                                <input #userEmail type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\">\\r\\n                                <label for=\\\"email\\\">Email</label>\\r\\n                                <span [hidden]=\\\"email.valid || email.pristine\\\" class=\\\"help-block text-danger\\\">Please enter a valid email format</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-form\\\">\\r\\n                                <i class=\\\"fa fa-key prefix white-text\\\"></i>\\r\\n                                <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\">\\r\\n                                <label for=\\\"password\\\">Password</label>\\r\\n                                <span [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"help-block text-danger\\\">Password must contain 6 or more characters</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-form\\\" [hidden]=\\\"!password.valid\\\">\\r\\n                                <i class=\\\"fa fa-key prefix white-text\\\"></i>\\r\\n                                <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" name=\\\"confirmPassword\\\" />\\r\\n                                <label for=\\\"confirmPassword\\\">Confirm Password</label>\\r\\n                                <span *ngIf=\\\"myForm.get('confirmPassword').hasError('passwordMatch') && myForm.get('confirmPassword').touched\\\" class=\\\"help-block text-danger\\\">Passwords do not match</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button [disabled]=\\\"!myForm.valid\\\" class=\\\"btn btn-deep-orange btn-block waves-effect waves-light\\\" type=\\\"submit\\\">\\r\\n                                        <span *ngIf=\\\"!loading\\\">Register <i class=\\\"fa fa-user-plus\\\"></i></span>\\r\\n                                            <span *ngIf=\\\"loading\\\">\\r\\n                                                <app-loader></app-loader>\\r\\n                                            </span>\\r\\n                                        </button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n\\r\\n                    <!--Footer-->\\r\\n                    <div class=\\\"modal-footer\\\">\\r\\n                        <div class=\\\"options\\\">\\r\\n                            <span class=\\\"white-text pull-right display-block text-right\\\">Already have an account <a routerLink=\\\"/user/login\\\" class=\\\"deep-orange-text\\\">Login</a></span>\\r\\n                            <span class=\\\"white-text display-block pull-right text-right\\\">Lost password? <a class=\\\"deep-orange-text\\\" [routerLink]=\\\"'/user/reset'\\\">Reset here</a></span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/register/register.component.html\n// module id = ./src/app/user/register/register.component.html\n// module chunks = main","import {Component, OnInit, Renderer, ViewChild, ElementRef, AfterViewInit} from '@angular/core';\r\nimport {FormGroup, FormControl, FormBuilder, Validators} from '@angular/forms';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../../auth/auth.service';\r\nimport {User} from '../../auth/user.model';\r\nimport { passwordMatch, emailValidator } from '../../validators/input-match';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit, AfterViewInit {\r\n  loginR: any;\r\n  loading: boolean;\r\n  myForm: FormGroup;\r\n  email: FormControl;\r\n  password: FormControl;\r\n  confirmPassword: FormControl;\r\n  @ViewChild('userEmail') userEmail: ElementRef;\r\n\r\n  constructor(private _fb: FormBuilder, private _authService: AuthService,\r\n              private _router: Router, private toastr: ToastsManager, private renderer: Renderer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading = false;\r\n    // if the user tries to hit the register page, first we check if he is logged in or not, if he is then we redirect him to the form page\r\n    if (this._authService.isLoggedIn()) {\r\n      this._router.navigateByUrl('/form');\r\n    }\r\n\r\n    this.email = new FormControl('', [Validators.required, emailValidator]);\r\n    this.password = new FormControl('', [Validators.required, Validators.minLength(6)]);\r\n    this.confirmPassword = new FormControl({ value: null, disabled: false }, [Validators.required, passwordMatch])\r\n    this.myForm = this._fb.group({\r\n      email: this.email,\r\n      password: this.password,\r\n      confirmPassword: this.confirmPassword,\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.renderer.invokeElementMethod(this.userEmail.nativeElement, 'focus', []);\r\n    }, 50);\r\n  }\r\n\r\n  // submit the register form to the backend with the user's desired credentials\r\n  onSubmit() {\r\n    this.loading = true;\r\n    const user = new User(this.myForm.value.email, this.myForm.value.password);\r\n    this._authService.signup(user)\r\n      .subscribe(\r\n        data => {\r\n          // after successfull registration, the user is redirected to the login page\r\n          this._router.navigate(['/user/login']);\r\n\r\n          // toastr message pops up to inform user that the registration was successfull\r\n          this.toastr.success('Please Login', 'Registration Successfull');\r\n        }\r\n      );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/register/register.component.ts","module.exports = \"<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user.component.html\n// module id = ./src/app/user/user.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector   : 'app-user',\r\n  templateUrl: './user.component.html'\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user.component.ts","import {Routes} from '@angular/router';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {ResetPasswordComponent} from './accountRecover/resetPassword.component';\r\nimport {ForgetPasswordComponent} from './accountRecover/forgetPassword.component';\r\nimport {UserFormsComponent} from '../userForms/formsTable/userForms.component';\r\nimport {AuthGuardService} from '../auth/authguard.service';\r\nimport {EditUserFormComponent} from '../userForms/editForm/editUserForm.component';\r\nimport {AppComponent} from '../app.component';\r\nimport {UserProfileComponent} from './profile/userProfile.component';\r\nimport {ChangePasswordComponent} from './profile/changePassword/changePassword.component';\r\n\r\nexport const USER_ROUTES: Routes = [\r\n  {path: '', component: AppComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'reset', component: ForgetPasswordComponent},\r\n  {path: 'reset/:token', component: ResetPasswordComponent},\r\n  {path: 'forms', component: UserFormsComponent, canActivate: [AuthGuardService]},\r\n  {path: 'profile', component: UserProfileComponent, canActivate: [AuthGuardService]},\r\n  {path: 'profile/password', component: ChangePasswordComponent, canActivate: [AuthGuardService]},\r\n  {path: 'forms/edit/:id', component: EditUserFormComponent, canActivate: [AuthGuardService]}\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user.routes.ts","module.exports = \".topPad {\\r\\n  padding-top: 100px !important;\\r\\n}\\r\\n\\r\\n.topMargin {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.img-resized {\\r\\n  width: 10%;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/userForms/editForm/editUserForm.component.css\n// module id = ./src/app/userForms/editForm/editUserForm.component.css\n// module chunks = main","module.exports = \"<!-- <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"submitEditedForm()\\\" *ngFor=\\\"let form of fetchedForm\\\" class=\\\"form-horizontal register-form\\\" novalidate>\\r\\n        <fieldset>\\r\\n            <legend class=\\\"topPad\\\">Edit Form with id: {{form._id}}</legend>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"col-md-4 control-label\\\" for=\\\"textInputOne\\\">Text Input One:</label>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input id=\\\"textInputOne\\\" #textOne formControlName=\\\"textInputOne\\\" name=\\\"textInputOne\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.textInputOne\\\" class=\\\"form-control input-md\\\">\\r\\n                    <div [hidden]=\\\"textInputOne.valid || textInputOne.pristine\\\" class=\\\"alert alert-danger\\\">Please enter some text</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"col-md-4 control-label\\\" for=\\\"textInputTwo\\\">Text Input Two:</label>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input id=\\\"textInputTwo\\\" formControlName=\\\"textInputTwo\\\" name=\\\"textInputTwo\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.textInputTwo\\\" class=\\\"form-control input-md\\\">\\r\\n                    <div [hidden]=\\\"textInputTwo.valid || textInputTwo.pristine\\\" class=\\\"alert alert-danger\\\">Please enter some text</div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-md-4 col-centered\\\">\\r\\n                    <div class=\\\"profilePictureTempEdit\\\">\\r\\n                        <button *ngIf=\\\"submitStarted\\\" class=\\\"disabled btn-no-hover btn btn-default centered progress-button\\\">\\r\\n              <i class=\\\"fa fa-circle-o-notch fa-spin fa-fw\\\"></i> Please wait... <span class=\\\"progress-percent\\\">{{progress}}%</span>\\r\\n            </button>\\r\\n                        <div class=\\\"text-center top-margin\\\">\\r\\n                            <div class=\\\"profilePictureTempEdit\\\" *ngIf=\\\"oldImage\\\">\\r\\n                                <img class=\\\"img-responsive\\\" src=\\\"./uploads/forms/{{form.owner}}/{{form.imagePath}}\\\" alt=\\\"image\\\" onerror=\\\"this.src ='assets/images/no-image.jpg';\\\">\\r\\n                                <div class=\\\"upload-button\\\" *ngIf=\\\"!imageReady\\\">\\r\\n                                    <input type=\\\"file\\\" name=\\\"file-1\\\" id=\\\"file-1\\\" class=\\\"inputfile4 inputfile-4\\\" (change)=\\\"onFileSelect($event)\\\">\\r\\n                                    <label for=\\\"file-1\\\">\\r\\n                <span>\\r\\n                </span>\\r\\n                  </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"profilePictureTempEdit\\\">\\r\\n                                <img *ngIf=\\\"imageReady\\\" #image class=\\\"img-responsive\\\" src=\\\"{{imageUrl}}{{imagePath}}\\\" alt=\\\"image\\\" onerror=\\\"this.src ='assets/images/no-image.jpg';\\\" />\\r\\n                                <div class=\\\"upload-button\\\">\\r\\n                                    <input type=\\\"file\\\" name=\\\"file-2\\\" id=\\\"file-2\\\" class=\\\"inputfile4 inputfile-4\\\" (change)=\\\"onFileSelect($event)\\\">\\r\\n                                    <label for=\\\"file-2\\\">\\r\\n                  <span>\\r\\n                  </span>\\r\\n                  </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            /*Submit Button */\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-md-4 col-centered\\\">\\r\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!myForm.valid && myForm.untouched\\\" id=\\\"submitForm\\\" name=\\\"sumbitForm\\\" class=\\\"btn btn-primary text-center bottomMargin\\\">Submit</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </fieldset>\\r\\n    </form> -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"card reg-card-width\\\">\\r\\n    <!--Header-->\\r\\n    <div class=\\\"card-header\\\" data-background-color=\\\"charcoal\\\">\\r\\n        <h4 class=\\\"title\\\">Update Details</h4>\\r\\n        <p class=\\\"category\\\">Update your current details people</p>\\r\\n    </div>\\r\\n    <div class=\\\"card-content\\\">\\r\\n        <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"submitEditedForm()\\\" *ngFor=\\\"let form of fetchedForm\\\" class=\\\"form-horizontal register-form clearfix\\\" novalidate>\\r\\n            <fieldset>\\r\\n                <!--///////////////////////////////////////////////////////////////////////////-->\\r\\n                <app-tabs #t>\\r\\n                    <app-tab title=\\\"Company Information\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\" for=\\\"tradingName\\\">Trading Name</label>\\r\\n                                    <input class=\\\"form-control\\\" formControlName=\\\"tradingName\\\" #tradingName type=\\\"text\\\" [(ngModel)]=\\\"form.tradingName\\\" required/>\\r\\n                                    <span *ngIf=\\\"myForm.get('tradingName').hasError('required') && myForm.get('tradingName').touched\\\" class=\\\"help-block text-danger\\\">Trading Name is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\" for=\\\"registeredCompanyName\\\">Registered Company Name</label>\\r\\n                                    <input class=\\\"form-control\\\" formControlName=\\\"registeredCompanyName\\\" #registeredCompanyName [(ngModel)]=\\\"form.registeredCompanyName\\\" type=\\\"text\\\" />\\r\\n                                    <span *ngIf=\\\"myForm.get('registeredCompanyName').hasError('required') && myForm.get('registeredCompanyName').touched\\\" class=\\\"help-block text-danger\\\">Company Name is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <input class=\\\"form-control\\\" formControlName=\\\"registrationNumber\\\" #registrationNumber type=\\\"text\\\" [(ngModel)]=\\\"form.registrationNumber\\\" />\\r\\n                                    <label class=\\\"control-label\\\" for=\\\"registrationNumber\\\">Registration Number</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('registrationNumber').hasError('required') && myForm.get('registrationNumber').touched\\\" class=\\\"help-block text-danger\\\">Registration Number is required</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\" for=\\\"vatNumber\\\">Vat Number</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"vatNumber\\\" #vatNumber [(ngModel)]=\\\"form.vatNumber\\\" />\\r\\n                                    <span *ngIf=\\\"myForm.get('vatNumber').hasError('required') && myForm.get('vatNumber').touched\\\" class=\\\"help-block text-danger\\\">VatNumber is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\" for=\\\"physicalAddress\\\">Physical Address</label>\\r\\n                                    <input type=\\\"text\\\" formControlName=\\\"physicalAddress\\\" class=\\\"form-control\\\" #physicalAddress [(ngModel)]=\\\"form.physicalAddress\\\" />\\r\\n                                    <span *ngIf=\\\"myForm.get('physicalAddress').hasError('required') && myForm.get('physicalAddress').touched\\\" class=\\\"help-block text-danger\\\">Physical Address is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <input type=\\\"text\\\" formControlName=\\\"postalAddress\\\" class=\\\"form-control\\\" #postalAddress [(ngModel)]=\\\"form.postalAddress\\\" />\\r\\n                                    <label class=\\\"control-label\\\" for=\\\"postalAddress\\\">Postal Address</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('postalAddress').hasError('required') && myForm.get('postalAddress').touched\\\" class=\\\"help-block text-danger\\\">Postal Address is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"tel\\\" [(ngModel)]=\\\"form.tel\\\" #tel/>\\r\\n                                    <label class=\\\"control-label\\\" for=\\\"tel\\\">Telephone Number</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('tel').hasError('required') && myForm.get('tel').touched\\\" class=\\\"help-block text-danger\\\">Your work Telephone Number is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\" for=\\\"faxNo\\\">Fax Number</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"faxNo\\\" [(ngModel)]=\\\"form.faxNo\\\" #faxNo/>\\r\\n                                    <span *ngIf=\\\"myForm.get('faxNo').hasError('required') && myForm.get('faxNo').touched\\\" class=\\\"help-block text-danger\\\">Fax number is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\" for=\\\"website\\\">Website</label>\\r\\n                                    <input type=\\\"text\\\" formControlName=\\\"website\\\" class=\\\"form-control md-textarea\\\" #website [(ngModel)]=\\\"form.website\\\" />\\r\\n                                    <span *ngIf=\\\"myForm.get('website').hasError('required') && myForm.get('website').touched\\\" class=\\\"help-block text-danger\\\">Website is required</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"float-right deep-orange-text display-block\\\" (click)=\\\"t.selectTab(1)\\\">Next <i class=\\\"fa fa-angle-right\\\"></i></span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </app-tab>\\r\\n                    <app-tab title=\\\"Correspondence\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <input class=\\\"form-control\\\" formControlName=\\\"accPersonName\\\" type=\\\"text\\\" #accPersonName [(ngModel)]=\\\"form.accPersonName\\\" />\\r\\n                                    <label class=\\\"control-label\\\">Accounts Person Name</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('accPersonName').hasError('required') && myForm.get('accPersonName').touched\\\" class=\\\"help-block text-danger\\\">Accounts Person Name is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <input class=\\\"form-control\\\" formControlName=\\\"accPersonNo\\\" type=\\\"text\\\" #accPersonNo [(ngModel)]=\\\"form.accPersonNo\\\" />\\r\\n                                    <label class=\\\"control-label\\\">Accounts Person No</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('accPersonNo').hasError('required') && myForm.get('accPersonNo').touched\\\" class=\\\"help-block text-danger\\\">Phone Number is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Accounts Person Fax No</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"accPersonFaxNo\\\" #accPersonFaxNo [(ngModel)]=\\\"form.accPersonFaxNo\\\" />\\r\\n                                    <span *ngIf=\\\"myForm.get('accPersonFaxNo').hasError('accPersonFaxNo') && myForm.get('accPersonFaxNo').touched\\\" class=\\\"help-block text-danger\\\">Fax Number is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Accounts Person Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"accPersonEmail\\\" #accPersonEmail [(ngModel)]=\\\"form.accPersonEmail\\\" />\\r\\n                                    <span *ngIf=\\\"myForm.get('accPersonEmail').hasError('required') && myForm.get('accPersonEmail').touched\\\" class=\\\"help-block text-danger\\\">Email is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Sales Person Name</label>\\r\\n                                    <input class=\\\"form-control\\\" formControlName=\\\"salesPersonName\\\" #salesPersonName type=\\\"text\\\" [(ngModel)]=\\\"form.salesPersonName\\\" />\\r\\n                                    <span *ngIf=\\\"myForm.get('salesPersonName').hasError('required') && myForm.get('salesPersonName').touched\\\" class=\\\"help-block text-danger\\\">Sales Person Name is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Sales Person No</label>\\r\\n                                    <input class=\\\"form-control\\\" formControlName=\\\"salesPersonNo\\\" type=\\\"text\\\" #salesPersonNo [(ngModel)]=\\\"form.salesPersonNo\\\" />\\r\\n                                    <span *ngIf=\\\"myForm.get('salesPersonNo').hasError('required') && myForm.get('salesPersonNo').touched\\\" class=\\\"help-block text-danger\\\">Phone Number is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Sales Person Email</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"salesPersonFaxNo\\\" #salesPersonFaxNo [(ngModel)]=\\\"form.salesPersonFaxNo\\\" />\\r\\n                                    <span *ngIf=\\\"myForm.get('salesPersonFaxNo').hasError('salesPersonFaxNo') && myForm.get('salesPersonFaxNo').touched\\\" class=\\\"help-block text-danger\\\">Fax Number is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"salesPersonEmail\\\" #salesPersonEmail [(ngModel)]=\\\"form.salesPersonEmail\\\" />\\r\\n                                    <label class=\\\"control-label\\\">Sales Person Fax No</label>\\r\\n                                    <span *ngIf=\\\"myForm.get('salesPersonEmail').hasError('required') && myForm.get('salesPersonEmail').touched\\\" class=\\\"help-block text-danger\\\">Email is required</span>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"float-right deep-orange-text display-block\\\" (click)=\\\"t.selectTab(2)\\\">Next <i class=\\\"fa fa-angle-right\\\"></i></span>\\r\\n                                <span class=\\\"float-left deep-orange-text display-block\\\" (click)=\\\"t.selectTab(0)\\\"><i class=\\\"fa fa-angle-left\\\"></i> Back</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </app-tab>\\r\\n                    <app-tab title=\\\"Required Documents\\\">\\r\\n                        <div class=\\\"display-block spacing-top border-bttom pad-lr\\\">\\r\\n                            <span class=\\\"file-name display-inline\\\">BEE Certificate</span>\\r\\n                            <a class=\\\"float-right btn btn-orange btn-xs\\\" target=\\\"_blank\\\" href=\\\"http://localhost:3000/assets/images/vendor_profile.png\\\">View</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"display-block spacing-top border-bttom pad-lr\\\">\\r\\n                            <span class=\\\"file-name display-inline\\\">Possible Conflict with Clinix Health Group</span>\\r\\n                            <a class=\\\"float-right btn btn-orange btn-xs\\\" target=\\\"_blank\\\" href=\\\"http://localhost:3000/assets/images/vendor_profile.png\\\">View</a>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"float-left deep-orange-text display-block\\\" (click)=\\\"t.selectTab(0)\\\"><i class=\\\"fa fa-angle-left\\\"></i> Back</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </app-tab>\\r\\n                </app-tabs>\\r\\n                <!--///////////////////////////////////////////////////////////////////////////-->\\r\\n\\r\\n\\r\\n                <!-- Button -->\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-12 \\\">\\r\\n                        <!-- Submit Button -->\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!myForm.valid && myForm.untouched\\\" id=\\\"submitForm\\\" name=\\\"sumbitForm\\\" class=\\\"btn btn-orange btn-sm\\\">Update profile</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/userForms/editForm/editUserForm.component.html\n// module id = ./src/app/userForms/editForm/editUserForm.component.html\n// module chunks = main","import {AfterViewInit, Component, ElementRef, EventEmitter, OnInit, Renderer, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {FormService} from '../../form/form.service';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport {BASE_URL, FORMS_API_URL} from '../../config/config';\r\nimport {Form} from '../../form/form.model';\r\nimport { vatNumberMatch, regNumberMatch } from '../../validators/input-match';\r\n@Component({\r\n  selector   : 'app-edit-user-form',\r\n  templateUrl: './editUserForm.component.html',\r\n  styleUrls  : ['./editUserForm.component.css']\r\n})\r\nexport class EditUserFormComponent implements OnInit, AfterViewInit {\r\n\r\n  onClear: EventEmitter<any> = new EventEmitter();\r\n\r\n  fetchedForm: any[] = [];\r\n  myForm: FormGroup;\r\n  // textInputOne: FormControl;\r\n  // textInputTwo: FormControl;\r\n  tradingName: FormControl;\r\n  registeredCompanyName: FormControl;\r\n  registrationNumber: FormControl;\r\n  physicalAddress: FormControl;\r\n  postalAddress: FormControl;\r\n  tel: FormControl;\r\n  faxNo: FormControl;\r\n  website: FormControl;\r\n  vatNumber: FormControl;\r\n  accPersonName: FormControl;\r\n  accPersonNo: FormControl;\r\n  accPersonFaxNo: FormControl;\r\n  accPersonEmail: FormControl;\r\n  accPersaccPersonEmailnFaxNo: FormControl;\r\n  salesPersonName: FormControl;\r\n  salesPersonNo: FormControl;\r\n  salesPersonEmail: FormControl;\r\n  salesPersonFaxNo: FormControl;\r\n\r\n  token: string  = localStorage.getItem('id_token');\r\n  url   = `${FORMS_API_URL}/image`;\r\n  imageUrl  = `${BASE_URL}/uploads/tmp/`;\r\n  formId: string;\r\n  maxSize   = 5000000;\r\n  invalidFileSizeMessage   = '{0}: Invalid file size, ';\r\n  invalidFileSizeMessageDetail = 'Maximum upload size is {0}.';\r\n  public files: File[];\r\n  public progress  = 0;\r\n  public submitStarted: boolean;\r\n  imagePath: string;\r\n  imageReady    = false;\r\n  oldImage      = true;\r\n  // @ViewChild('textOne') textOne: ElementRef;\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n\r\n  constructor(private formService: FormService,\r\n              private toastr: ToastsManager,\r\n              private fb: FormBuilder,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private renderer: Renderer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // grabbing the form id from the url\r\n    this.formId = this.route.snapshot.params['id'];\r\n    this.formService.getSingleForm(this.formId)\r\n      .subscribe(\r\n        (data => {\r\n          const formArray = [];\r\n          // tslint:disable-next-line:forin\r\n          for (let key in data) {\r\n            formArray.push(data[key]);\r\n          }\r\n          this.fetchedForm = formArray;\r\n        })\r\n      );\r\n\r\n    this.tradingName = new FormControl('', Validators.required);\r\n    this.registeredCompanyName = new FormControl('', Validators.required);\r\n    this.registrationNumber = new FormControl('', Validators.required);\r\n    this.physicalAddress = new FormControl('', Validators.required);\r\n    this.postalAddress = new FormControl('', Validators.required);\r\n    this.tel = new FormControl('', Validators.required);\r\n    this.faxNo = new FormControl('', Validators.required);\r\n    this.vatNumber = new FormControl('', Validators.required);\r\n    this.website = new FormControl('', Validators.required);\r\n    this.accPersonName = new FormControl('', Validators.required);\r\n    this.accPersonNo = new FormControl('', Validators.required);\r\n    this.accPersonFaxNo = new FormControl('', Validators.required);\r\n    this.accPersonEmail = new FormControl('', Validators.required);\r\n    this.salesPersonName = new FormControl('', Validators.required);\r\n    this.salesPersonNo = new FormControl('', Validators.required);\r\n    this.salesPersonFaxNo = new FormControl('', Validators.required);\r\n    this.salesPersonEmail = new FormControl('', Validators.required);\r\n\r\n    this.myForm = this.fb.group({\r\n      tradingName: this.tradingName,\r\n      registeredCompanyName: this.registeredCompanyName,\r\n      registrationNumber: this.registrationNumber,\r\n      // confirmRegNumber: new FormControl({ value: null, disabled: false }, [Validators.required, regNumberMatch]),\r\n      physicalAddress: this.physicalAddress,\r\n      postalAddress: this.postalAddress,\r\n      tel: this.tel,\r\n      faxNo: this.faxNo,\r\n      vatNumber: this.vatNumber,\r\n      website: this.website,\r\n      // confirmVatNumber: new FormControl({ value: null, disabled: false }, [Validators.required, vatNumberMatch]),\r\n      accPersonName: this.accPersonName,\r\n      accPersonNo: this.accPersonNo,\r\n      accPersonFaxNo: this.accPersonFaxNo,\r\n      accPersonEmail: this.accPersonEmail,\r\n      salesPersonName: this.salesPersonName,\r\n      salesPersonNo: this.salesPersonNo,\r\n      salesPersonEmail: this.salesPersonEmail,\r\n      salesPersonFaxNo: this.salesPersonFaxNo,\r\n    });\r\n  }\r\n\r\n  // focus on first input box after the view is initialized\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      // this.renderer.invokeElementMethod(this.textOne.nativeElement, 'focus', []);\r\n    }, 50);\r\n  }\r\n\r\n  // cancel and return to the user's forms page\r\n  cancel() {\r\n    this.router.navigate(['user/forms']);\r\n  }\r\n\r\n  // event fired when the user selects an image\r\n  onFileSelect(event) {\r\n    this.clear();\r\n    this.submitStarted = true;\r\n\r\n    let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\r\n    for (let i = 0; i < files.length; i++) {\r\n      let file = files[i];\r\n      if (this.validate(file)) {\r\n        if (this.isFile(file)) {\r\n          this.files.push(files[i]);\r\n          let xhr      = new XMLHttpRequest();\r\n          let formData = new FormData();\r\n\r\n          for (let i = 0; i < this.files.length; i++) {\r\n            formData.append('fileUp', this.files[i], this.files[i].name);\r\n          }\r\n\r\n          xhr.onreadystatechange = () => {\r\n            if (xhr.readyState === 4) {\r\n              this.progress = 0;\r\n              if (xhr.status === 201) {\r\n                this.imagePath     = xhr.response.replace(/^\"|\"$/g, '');\r\n                this.imageReady    = true;\r\n                this.oldImage      = false;\r\n                this.submitStarted = false;\r\n              } else if (xhr.status !== 201) {\r\n                this.toastr.error('There was an error, please try again later');\r\n                this.submitStarted = false;\r\n                this.oldImage      = true;\r\n                this.clear();\r\n              }\r\n              this.clear();\r\n            }\r\n          };\r\n          xhr.upload.addEventListener('progress', (e: ProgressEvent) => {\r\n            if (e.lengthComputable) {\r\n              this.progress = Math.round((e.loaded * 100) / e.total);\r\n            }\r\n          }, false);\r\n\r\n          xhr.open('POST', this.url, true);\r\n          xhr.setRequestHeader('Authorization', 'JWT ' + this.token);\r\n          xhr.send(formData);\r\n        }\r\n      } else if (!this.isFile(file)) {\r\n        this.toastr.error('Only pdf, doc, jpep and png are allowed');\r\n      }\r\n    }\r\n  }\r\n\r\n  submitEditedForm() {\r\n    this.submitStarted = true;\r\n    const editForm     = new Form(\r\n      // this.myForm.value.textInputOne,\r\n      // this.myForm.value.textInputTwo,\r\n      this.myForm.value.tradingName,\r\n      this.myForm.value.registeredCompanyName,\r\n      this.myForm.value.registrationNumber,\r\n      this.myForm.value.physicalAddress,\r\n      this.myForm.value.postalAddress,\r\n      this.myForm.value.tel,\r\n      this.myForm.value.faxNo,\r\n      this.myForm.value.website,\r\n      this.myForm.value.vatNumber,\r\n      this.myForm.value.accPersonName,\r\n      this.myForm.value.accPersonNo,\r\n      this.myForm.value.accPersonFaxNo,\r\n      this.myForm.value.accPersonEmail,\r\n      this.myForm.value.salesPersonName,\r\n      this.myForm.value.salesPersonNo,\r\n      this.myForm.value.salesPersonFaxNo,\r\n      this.myForm.value.salesPersonEmail,\r\n      this.imagePath\r\n    );\r\n    this.formService.editForm(editForm, this.formId)\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigateByUrl('/user/forms');\r\n          this.toastr.success('Form updated successfully');\r\n        }, error => {\r\n          this.submitStarted = false;\r\n          this.toastr.error('There was an error, please try again later');\r\n        }\r\n      );\r\n  }\r\n\r\n  // clears the form\r\n  clear() {\r\n    this.files = [];\r\n    this.onClear.emit();\r\n  }\r\n\r\n  // check if the image is actually an image by checking the mime type\r\n  isFile(file: File): boolean {\r\n    if (!file.type.match(/.jpeg|.jpg|.png|.doc|.docx|.gif/gi)) {\r\n      this.toastr.error('Only pdf, doc, jpep and png are allowed');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // check if the form has files ready to be uploaded\r\n  hasFiles(): boolean {\r\n    if (typeof this.files !== 'number') {\r\n      return this.files && this.files.length > 0;\r\n    }\r\n  }\r\n\r\n  // remove the image from the preview\r\n  remove(index: number) {\r\n    this.files.splice(index, 1);\r\n    this.fileInput.nativeElement.value = '';\r\n  }\r\n\r\n  // check the image file size\r\n  validate(file: File): boolean {\r\n    if (this.maxSize && file.size > this.maxSize) {\r\n      this.toastr.error(this.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.maxSize)),\r\n        this.invalidFileSizeMessage.replace('{0}', file.name));\r\n      this.submitStarted = false;\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n// format the size to display it in toastr in case the user uploaded a file bigger than 5MB\r\n  formatSize(bytes) {\r\n    if (bytes === 0) {\r\n      return '0 B';\r\n    }\r\n    let k     = 1000,\r\n        dm    = 3,\r\n        sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n        i     = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/userForms/editForm/editUserForm.component.ts","module.exports = \".topPad {\\r\\n  padding-top: 100px !important;\\r\\n}\\r\\n\\r\\n.topMargin {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.img-resized {\\r\\n  width: 10%;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/userForms/formsTable/userForms.component.css\n// module id = ./src/app/userForms/formsTable/userForms.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card reg-card-width\\\">\\r\\n    <!--Header-->\\r\\n    <div class=\\\"card-header\\\" data-background-color=\\\"charcoal\\\">\\r\\n        <h4 class=\\\"title\\\">Profile</h4>\\r\\n        <p class=\\\"category\\\">These are your details</p>\\r\\n    </div>\\r\\n    <div class=\\\"card-content\\\">\\r\\n        <form *ngFor=\\\"let form of fetchedForms\\\">\\r\\n            <fieldset>\\r\\n                <app-tabs #t>\\r\\n                    <app-tab title=\\\"Company Information\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Trading Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{form.tradingName}}\\\" disabled=\\\"\\\">\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Registered Company Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" disabled=\\\"disabled\\\" value=\\\"{{form.registeredCompanyName}}\\\">\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Registration Number</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" value=\\\"{{form.registrationNumber}}\\\" disabled>\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Vat Number</label>\\r\\n                                    <input type=\\\"text\\\" value=\\\"{{form.vatNumber}}\\\" class=\\\"form-control\\\" disabled=\\\"\\\">\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Physical Address</label>\\r\\n                                    <input type=\\\"text\\\" value=\\\"{{form.physicalAddress}}\\\" class=\\\"form-control\\\" disabled>\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Postal Address</label>\\r\\n                                    <input type=\\\"email\\\" value=\\\"{{form.postalAddress}}\\\" class=\\\"form-control\\\" disabled>\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Work Telephone Number</label>\\r\\n                                    <input type=\\\"text\\\" value=\\\"{{form.tel}}\\\" class=\\\"form-control\\\" disabled=\\\"\\\">\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Fax Number</label>\\r\\n                                    <input type=\\\"text\\\" value=\\\"{{form.faxNo}}\\\" class=\\\"form-control\\\" disabled>\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Website</label>\\r\\n                                    <input type=\\\"email\\\" value=\\\"{{form.website}}\\\" class=\\\"form-control\\\" disabled>\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"float-right deep-orange-text display-block\\\" (click)=\\\"t.selectTab(1)\\\">Next <i class=\\\"fa fa-angle-right\\\"></i></span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </app-tab>\\r\\n                    <app-tab title=\\\"Correspondence\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Accounts Person Name</label>\\r\\n                                    <input type=\\\"text\\\" value=\\\"{{form.accPersonName}}\\\" class=\\\"form-control\\\" disabled=\\\"\\\">\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Accounts Person No</label>\\r\\n                                    <input type=\\\"text\\\" value=\\\"{{form.accPersonNo}}\\\" class=\\\"form-control\\\" disabled>\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Accounts Person Fax No</label>\\r\\n                                    <input type=\\\"email\\\" value=\\\"{{form.accPersonFaxNo}}\\\" class=\\\"form-control\\\" disabled>\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Accounts Person Email</label>\\r\\n                                    <input type=\\\"email\\\" value=\\\"{{form.accPersonEmail}}\\\" class=\\\"form-control\\\" disabled>\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Sales Person Name</label>\\r\\n                                    <input value=\\\"{{form.salesPersonName}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" disabled=\\\"\\\">\\r\\n                                    <span class=\\\"material-input\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Sales Person No</label>\\r\\n                                    <input type=\\\"text\\\" value=\\\"{{form.salesPersonNo}}\\\" class=\\\"form-control\\\" disabled>\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Sales Person Email</label>\\r\\n                                    <input type=\\\"email\\\" value=\\\"{{form.salesPersonEmail}}\\\" class=\\\"form-control\\\" disabled>\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <div class=\\\"form-group label-floating is-focused\\\">\\r\\n                                    <label class=\\\"control-label\\\">Sales Person Fax No</label>\\r\\n                                    <input value=\\\"{{form.salesPersonFaxNo}}\\\" type=\\\"email\\\" class=\\\"form-control\\\" disabled>\\r\\n                                    <span class=\\\"material-input\\\"></span></div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"float-right deep-orange-text display-block\\\" (click)=\\\"t.selectTab(2)\\\">Next <i class=\\\"fa fa-angle-right\\\"></i></span>\\r\\n                                <span class=\\\"float-left deep-orange-text display-block\\\" (click)=\\\"t.selectTab(0)\\\"><i class=\\\"fa fa-angle-left\\\"></i> Back</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </app-tab>\\r\\n                    <app-tab title=\\\"Rquired Documents\\\">\\r\\n                        <div class=\\\"display-block spacing-top border-bttom pad-lr\\\">\\r\\n                            <span class=\\\"file-name display-inline\\\">BEE Certificate</span>\\r\\n                            <a class=\\\"float-right btn btn-orange btn-xs\\\" target=\\\"_blank\\\" href=\\\"http://localhost:3000/assets/images/vendor_profile.png\\\">View</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"display-block spacing-top border-bttom pad-lr\\\">\\r\\n                            <span class=\\\"file-name display-inline\\\">Possible Conflict with Clinix Health Group</span>\\r\\n                            <a class=\\\"float-right btn btn-orange btn-xs\\\" target=\\\"_blank\\\" href=\\\"http://localhost:3000/assets/images/vendor_profile.png\\\">View</a>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <span class=\\\"float-left deep-orange-text display-block\\\" (click)=\\\"t.selectTab(0)\\\"><i class=\\\"fa fa-angle-left\\\"></i> Back</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </app-tab>\\r\\n                </app-tabs>\\r\\n            </fieldset>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/userForms/formsTable/userForms.component.html\n// module id = ./src/app/userForms/formsTable/userForms.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {FormService} from '../../form/form.service';\r\nimport { AuthService } from '../../auth/auth.service';\r\nimport { ProfileService } from '../../user/profile/profile.service';\r\nimport {BASE_URL, FORMS_API_URL} from '../../config/config';\r\n\r\n@Component({\r\n  selector   : 'app-user-form',\r\n  templateUrl: './userForms.component.html',\r\n  styleUrls  : ['./userForms.component.css']\r\n})\r\nexport class UserFormsComponent implements OnInit {\r\n  baseUrl   = `${BASE_URL}`;\r\n  fetchedForms = [];\r\n  fetchedUser = [];\r\n\r\n  constructor(\r\n     private authService: AuthService,\r\n     private profileService: ProfileService,\r\n     private formService: FormService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      if (this.authService.isLoggedIn()) {\r\n        let userId = localStorage.getItem('userId');\r\n        this.profileService.getUserDetails(userId)\r\n          .subscribe(\r\n            (data => {\r\n              const userArray = [];\r\n              // tslint:disable-next-line:forin\r\n              for (let key in data) {\r\n                userArray.push(data[key]);\r\n              }\r\n              this.fetchedUser = userArray;\r\n            })\r\n          );\r\n      }\r\n      this.formService.getUserForms()\r\n      .subscribe(\r\n        forms => this.fetchedForms = forms,\r\n        error => console.log(error));\r\n    }, 50);\r\n  }\r\n  logout() {\r\n    return this.authService.logout();\r\n  }\r\n  onDelete(formId) {\r\n    this.formService.deleteForm(formId)\r\n      .subscribe();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/userForms/formsTable/userForms.component.ts","import { FormControl } from '@angular/forms';\r\nimport { ValidatorFn } from '@angular/forms/src/directives/validators';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\nexport function vatNumberMatch(control: FormControl) {\r\n    if (control.parent !== undefined) {\r\n        return control.parent.value.vatNumber === control.value ? null : { 'vatNumberMatch': true };\r\n    }\r\n}\r\nexport function regNumberMatch(control: FormControl) {\r\n    if (control.parent !== undefined) {\r\n        return control.parent.value.registrationNumber === control.value ? null : { 'regNumberMatch': true };\r\n    }\r\n}\r\nexport function passwordMatch(control: FormControl) {\r\n    if (control.parent !== undefined) {\r\n        return control.parent.value.password === control.value ? null : { 'passwordMatch': true };\r\n    }\r\n}\r\n\r\n// input validator to check if the email entered by the user is actually text in an email form\r\nexport function emailValidator(control: FormControl) {\r\n    let EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\r\n    if (!EMAIL_REGEXP.test(control.value)) {\r\n      return {invalidEmail: true};\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/validators/input-match.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import './polyfills.ts';\r\n\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {enableProdMode} from '@angular/core';\r\nimport {environment} from './environments/environment';\r\nimport {AppModule} from './app/';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n  // .then((success: any) => console.log('App bootstrapped'))\r\n  // .catch((err: any) => console.error(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","// This file includes polyfills needed by Angular 2 and is loaded before\r\n// the app. You can add your own extra polyfills to this file.\r\nimport 'core-js/es6/symbol';\r\nimport 'core-js/es6/object';\r\nimport 'core-js/es6/function';\r\nimport 'core-js/es6/parse-int';\r\nimport 'core-js/es6/parse-float';\r\nimport 'core-js/es6/number';\r\nimport 'core-js/es6/math';\r\nimport 'core-js/es6/string';\r\nimport 'core-js/es6/date';\r\nimport 'core-js/es6/array';\r\nimport 'core-js/es6/regexp';\r\nimport 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport 'core-js/es6/reflect';\r\n\r\nimport 'core-js/es7/reflect';\r\nimport 'zone.js/dist/zone';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts"],"sourceRoot":"webpack:///"}